
///////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ

&НаКлиенте
Перем ПредыдущаяВыделеннаяДатаКалендаря;
&НаКлиенте
Перем ПредыдущееОтображение;

&НаКлиенте
Процедура ДатаКалендаряПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_ОбработчикОжиданияДатаКалендаряПриИзменении", 0.1, Истина);
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ОЖИДАНИЯ

&НаКлиенте
Процедура Подключаемый_ОбработчикОжиданияДатаКалендаряПриИзменении()
	//Если	Объект.ТекущееОтображение = "День"
	//	Или Объект.ТекущееОтображение = "Неделя"
	//	Или Объект.ТекущееОтображение = "ПоРесурсам"
	//	Или Объект.ТекущееОтображение = "Расписание"
	//	Или Объект.ТекущееОтображение = "Список"
	//	Или Объект.ТекущееОтображение = "Диспетчеризация" Тогда
	//	//
	//	Если Объект.ТекущееОтображение = "Список" Тогда
	//		МассивВыбранныхДат = ПолучитьМассивВыбранныхДат();
	//		КалендарьСписокПериодНачало		= НачалоДня(МассивВыбранныхДат[0]);
	//		КалендарьСписокПериодОкончание	= НачалоДня(МассивВыбранныхДат[МассивВыбранныхДат.ВГраница()]);
	//	КонецЕсли;
	//	
	//	КалендарьОбновитьКлиент();
	//КонецЕсли;
	ПредыдущаяВыделеннаяДатаКалендаря = ДатаКалендаря;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВыходныеДниНаСервере(МассивВыделенныхДат)
	
	НаборЗаписей = РегистрыСведений.РабочиеДниМастеров.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Мастер.Установить(ТекущийМастер); 
	
	Для каждого ВыделеннаяДата Из МассивВыделенныхДат Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить(); 
		
		НоваяЗапись.Мастер = ТекущийМастер; 
		НоваяЗапись.НомерНедели = ""; 
		НоваяЗапись.ДатаВремяЗаписи = ВыделеннаяДата;
		НоваяЗапись.Рабочий = Ложь;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВыходныеДни(Команда)
	МассивВыделенныхДат = Элементы.ДатаКалендаря.ВыделенныеДаты;
	ЗаписатьВыходныеДниНаСервере(МассивВыделенныхДат);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ДатаКалендаря = ТекущаяДатаСеанса();
	ТекущееОтображение = "Неделя";
	ТекущийМастер = "";
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии".
//
Процедура ПриОткрытии(Отказ)
	//НастроитьВидимостьИДоступностьФормы();
	//ПрименитьНастройкиЭлементовОтборов();
	//НастройкиОбщие = ПолучитьНастройкиОбщиеКлиент();
	
	ПредыдущаяВыделеннаяДатаКалендаря = ДатаКалендаря;
	ПредыдущееОтображение = ТекущееОтображение;
	
	//Если СписокВыборМесяца.Количество() > 0 Тогда
	//	СписокВыборМесяцаНеОбрабатыватьПриАктивизацииСтроки = Истина;
	//	ВыделитьМесяцВСписке();
	//КонецЕсли;
	//ДеревоРесурсовЭлементы = ДеревоРесурсов.ПолучитьЭлементы();
	//Если ДеревоРесурсовЭлементы.Количество() > 0 Тогда
	//	ДеревоРесурсовНеОбрабатыватьПриАктивизацииСтроки = Истина;
	//	Элементы.ДеревоРесурсов.ТекущаяСтрока = ДеревоРесурсовЭлементы[0].ПолучитьИдентификатор();
	//КонецЕсли;
	//
	//Если Объект.ТекущееОтображение = "Неделя" Тогда
	//	ДатаКалендаряВыделитьНеделю();
	//КонецЕсли;
	//КалендарьОбновитьКлиент();
	//
	//Если Элементы.ГруппаСписокЗадач.Видимость Тогда
	//	РазвернутьСписокЗадач();
	//КонецЕсли;
	//
	//Если ИспользоватьГруппыПользователей Тогда
	//	Попытка Элементы.ГруппыПользователей.ТекущаяСтрока = ПредопределенноеЗначение("Справочник.ГруппыПользователей.ВсеПользователи");
	//	Исключение КонецПопытки;
	//КонецЕсли;
	//
	//ОбновитьСодержимоеФормыПриИзмененииГруппы();
	//
	//Попытка Элементы.СписокПользователейДиспетчеризация.ТекущаяСтрока = ТекущийПользовательСеанса;
	//Исключение КонецПопытки;
	//Попытка Элементы.ДеревоПользователейДиспетчеризации.ТекущаяСтрока = ДеревоПользователейДиспетчеризации.ПолучитьЭлементы()[0].ПолучитьЭлементы()[0].ПолучитьИдентификатор();
	//Исключение КонецПопытки;
	//
	//Если	НастройкиОбщие.Свойство("Автообновление") И НастройкиОбщие.Автообновление = Истина
	//	И	НастройкиОбщие.Свойство("ПериодАвтообновления") И ТипЗнч(НастройкиОбщие.ПериодАвтообновления) = Тип("Число") Тогда
	//	//
	//	ПодключитьОбработчикОжидания("Подключаемый_Автообновление", Макс(НастройкиОбщие.ПериодАвтообновления * 60, 60));
	//КонецЕсли;
	//
	//Если НЕ ПолучитьИспользованиеПолнотекствогоПоиска() Тогда
	//	Элементы.ДекорацияПолнотекстовыйПоискОтлючен.Видимость = Истина;
	//КонецЕсли;	
		
КонецПроцедуры

