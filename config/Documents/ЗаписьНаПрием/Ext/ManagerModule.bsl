#Область ИнициализацияДаных

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаЗаписьНаПрием, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапросаИнициализироватьДанныеДокумента());
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаписьНаПрием);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	
	Запрос.ВыполнитьПакет();
	
	СформироватьТаблицаЗаписиНаПрием(ДокументСсылкаЗаписьНаПрием, СтруктураДополнительныеСвойства);
	СформироватьТаблицаНапоминанияКонтрагента(ДокументСсылкаЗаписьНаПрием, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

Функция ТекстЗапросаИнициализироватьДанныеДокумента()
	
	Возврат
	"ВЫБРАТЬ
	|	ЗаписьНаПриемВремяЗаписи.НомерСтроки КАК НомерСтроки,
	|	ЗаписьНаПриемВремяЗаписи.Ссылка КАК Документ,
	|	ЗаписьНаПриемВремяЗаписи.Ссылка.Дата КАК Период,
	|	ЗаписьНаПриемВремяЗаписи.Ссылка.Контрагент КАК Контрагент,
	|	ЗаписьНаПриемВремяЗаписи.Мастер КАК Мастер,
	|	ЗаписьНаПриемВремяЗаписи.Мастер.Бот.Ссылка КАК МастерБотСсылка,
	|	ЗаписьНаПриемВремяЗаписи.Мастер.Бот.Обработка КАК МастерБотОбработка,
	|	ЗаписьНаПриемВремяЗаписи.Номенклатура КАК Номенклатура,
	|	ЗаписьНаПриемВремяЗаписи.ДатаВремяЗаписи КАК ДатаВремяЗаписи,
	|	ЛОЖЬ КАК Доставлено,
	|	ЗаписьНаПриемВремяЗаписи.ТипЗаписиНаПрием КАК ТипЗаписиНаПрием
	|ПОМЕСТИТЬ ВременнаяТаблицаЗаписи
	|ИЗ
	|	Документ.ЗаписьНаПрием.ВремяЗаписи КАК ЗаписьНаПриемВремяЗаписи
	|ГДЕ
	|	ЗаписьНаПриемВремяЗаписи.Ссылка = &Ссылка";
	
КонецФункции

#КонецОбласти

#Область Проведение

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаЗаписиНаПрием(ДокументСсылкаЗаписьНаПрием, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаЗаписи.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаЗаписи.Документ КАК Документ,
	|	ТаблицаЗаписи.Период КАК Период,
	|	ТаблицаЗаписи.Контрагент КАК Контрагент,
	|	ТаблицаЗаписи.Мастер КАК Мастер,
	|	ТаблицаЗаписи.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаписи.ДатаВремяЗаписи КАК ДатаВремяЗаписи,
	|	ТаблицаЗаписи.ТипЗаписиНаПрием КАК ТипЗаписиНаПрием
	|ИЗ
	|	ВременнаяТаблицаЗаписи КАК ТаблицаЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаписи.Документ,
	|	ТаблицаЗаписи.Период,
	|	ТаблицаЗаписи.Контрагент,
	|	ТаблицаЗаписи.Номенклатура,
	|	ТаблицаЗаписи.Мастер,
	|	ТаблицаЗаписи.ДатаВремяЗаписи,
	|	ТаблицаЗаписи.ТипЗаписиНаПрием";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаЗаписиНаПрием", РезультатЗапроса.Выгрузить());
	
КонецПроцедуры // СформироватьТаблицаЗаписиНаПрием()

// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблицаНапоминанияКонтрагента(ДокументСсылкаЗаписьНаПрием, СтруктураДополнительныеСвойства)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗаписи.Мастер КАК Мастер,
	|	ТаблицаЗаписи.МастерБотСсылка КАК Источник,
	|	ТаблицаЗаписи.МастерБотОбработка КАК МастерБотОбработка,
	|	ТаблицаЗаписи.Контрагент КАК Контрагент,
	|	ТаблицаЗаписи.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаписи.ДатаВремяЗаписи КАК ВремяСобытия,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК СрокНапоминания,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(100)) КАК Описание,
	|	ЛОЖЬ КАК Доставлено
	|ИЗ
	|	ВременнаяТаблицаЗаписи КАК ТаблицаЗаписи
	|ГДЕ
	|	ТаблицаЗаписи.Доставлено = ЛОЖЬ
	|	И ТаблицаЗаписи.ТипЗаписиНаПрием = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейНаПрием.Телеграм)
	|ИТОГИ ПО
	|	Мастер,
	|	Источник,
	|	Контрагент,
	|	ВремяСобытия";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаНапоминанияКонтрагента = РезультатЗапроса.Выгрузить();
	ТаблицаНапоминанияКонтрагента.Очистить();
//	ТаблицаНапоминанияКонтрагента.Колонки.Удалить("Мастер,МастерБотОбработка,Номенклатура");
	
	ВыборкаМастер = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаМастер.Следующий() Цикл
		
		Мастер = ВыборкаМастер.Мастер;
		мСроковНапоминаний = Справочники.Мастера.ПолучитьСрокиНапоминанийМастера(Мастер);

		ВыборкаМастерБотСсылка = ВыборкаМастер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаМастерБотСсылка.Следующий() Цикл
			
			Источник = ВыборкаМастерБотСсылка.Источник;
			
			ВыборкаКонтрагентИдентификатор = ВыборкаМастерБотСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаКонтрагентИдентификатор.Следующий() Цикл
				Контрагент = ВыборкаКонтрагентИдентификатор.Контрагент;
				
				ВыборкаДатаВремяЗаписи = ВыборкаКонтрагентИдентификатор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				ТекстСообщения = "";
				
				Пока ВыборкаДатаВремяЗаписи.Следующий() Цикл
					
					ВремяСобытия = ВыборкаДатаВремяЗаписи.ВремяСобытия;
					ТекстСообщения = "Нагадую про запис на " + ВремяСобытия +":"+  Символы.ПС;
					
					ВыборкаДетальныеЗаписи = ВыборкаДатаВремяЗаписи.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
						ТекстСообщения = ТекстСообщения + Номенклатура + Символы.ПС;
					КонецЦикла;
					
					Для каждого СрокНапоминания Из мСроковНапоминаний Цикл
						
						Напоминание = ТаблицаНапоминанияКонтрагента.Добавить();
						Напоминание.Контрагент = Контрагент;
						Напоминание.ВремяСобытия = ВремяСобытия;
						Напоминание.Источник = Источник;
						Напоминание.СрокНапоминания = (ВремяСобытия - СрокНапоминания*60); 
						Напоминание.Описание = ТекстСообщения;	
						Напоминание.Доставлено = Ложь;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНапоминанияКонтрагента", ТаблицаНапоминанияКонтрагента);
	
КонецПроцедуры // СформироватьТаблицаЗаписиНаПрием()

#КонецОбласти