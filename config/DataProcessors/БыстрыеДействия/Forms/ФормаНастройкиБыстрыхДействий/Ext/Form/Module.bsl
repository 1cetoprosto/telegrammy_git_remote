
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоличествоКартинокВСтроке = 6;
	
	Если Параметры.Свойство("ДобавленныеБыстрыеДействия") Тогда
		ДобавленныеБыстрыеДействия.Очистить();
		Для каждого Идентификатор Из Параметры.ДобавленныеБыстрыеДействия Цикл
			ДобавленныеБыстрыеДействия.Добавить().Идентификатор = Идентификатор;
		КонецЦикла; 
	КонецЕсли;
	Если Параметры.Свойство("АдресНастроекБыстрыхДействий") И ЭтоАдресВременногоХранилища(Параметры.АдресНастроекБыстрыхДействий) Тогда
		НастройкиБыстрыхДействий.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресНастроекБыстрыхДействий));
	КонецЕсли;
	Параметры.Свойство("ЕстьВводыОстатков", ЕстьВводыОстатков);
	ЗаполнитьБыстрыеНастройки();
	
	ОбновитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		
	СброситьАктивныйЭлемент();
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Подключаемый_БыстроеДействиеНажатие(Элемент)
	
	ИмяЭлемента = СтрЗаменить(Элемент.Имя, "БыстроеДействие", "");
	
	// Отражение изменений в таблице быстрых действий
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Идентификатор", ИмяЭлемента);
	Строки = БыстрыеДействия.НайтиСтроки(СтруктураОтбора);
	Если Строки.Количество()=0 Тогда
		Возврат;
	КонецЕсли; 
	ТекущаяСтрока = Строки[0];
	Если НЕ ТекущаяСтрока.Выводить И КоличествоВыводимыхКнопок()>=7 Тогда
		ПоказатьПредупреждение(, НСтр("ru='Одновременно можно вывести не более 7 кнопок быстрых действий';uk='Одночасно можна вивести не більше 7 кнопок швидких дій'"), 0);
		Возврат;
	КонецЕсли;
	ТекущаяСтрока.Выводить = НЕ ТекущаяСтрока.Выводить; 
	
	// Изменение цвета фона элемента
	Группа = Элементы["ГруппаБыстроеДействие"+ИмяЭлемента];
	Если Группа.ЦветФона=Новый Цвет(255, 255, 255) Тогда
		Группа.ЦветФона = Новый Цвет(255, 232, 63);
	Иначе
		Группа.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
	#Если ВебКлиент Тогда
		
	СброситьАктивныйЭлемент();
		
	#КонецЕсли
	
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_БыстроеДействиеНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ИмяЭлемента = СтрЗаменить(Элемент.Имя, "БыстроеДействие", "");
	ПараметрыПеретаскивания.Значение = ИмяЭлемента;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_БыстроеДействиеПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	ИмяИсточник = ПараметрыПеретаскивания.Значение;
	ИмяПриемник = СтрЗаменить(Элемент.Имя, "БыстроеДействие", "");
	СтандартнаяОбработка = ТипЗнч(ИмяИсточник)<>Тип("Строка") ИЛИ ПустаяСтрока(ИмяИсточник) ИЛИ ИмяИсточник=ИмяПриемник;	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_БыстроеДействиеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	ИмяИсточник = ПараметрыПеретаскивания.Значение;
	Если ТипЗнч(ИмяИсточник)<>Тип("Строка") ИЛИ ПустаяСтрока(ИмяИсточник) Тогда
		Возврат;
	КонецЕсли; 
	ИмяПриемник = СтрЗаменить(Элемент.Имя, "БыстроеДействие", "");
	Если ИмяИсточник=ИмяПриемник Тогда
		Возврат;
	КонецЕсли; 
	ПереместитьЭлементы(ИмяИсточник, ИмяПриемник);
	
	#Если ВебКлиент Тогда
		
	СброситьАктивныйЭлемент();
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Результат = Новый Структура;
	Результат.Вставить("Событие", "НастройкаБыстрыхДействий");
	Результат.Вставить("БыстрыеДействия", Новый Массив);
	Для каждого Стр Из БыстрыеДействия Цикл
		Если НЕ Стр.Выводить Тогда
			Продолжить;
		КонецЕсли; 
		Результат.БыстрыеДействия.Добавить(Стр.Идентификатор);
	КонецЦикла; 		
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	Закрыть();
	
КонецПроцедуры
 
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьБыстрыеНастройки()
	
	ТаблицаНастроек = НастройкиБыстрыхДействий.Выгрузить();
	ЗаполнитьПорядок(ТаблицаНастроек);
	ТаблицаДобавленных = ДобавленныеБыстрыеДействия.Выгрузить();
	ЗаполнитьПорядок(ТаблицаДобавленных);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаНастроек", ТаблицаНастроек);
	Запрос.УстановитьПараметр("ТаблицаДобавленных", ТаблицаДобавленных);
	Запрос.УстановитьПараметр("КоличествоВыводимых", ТаблицаДобавленных.Количество());
	Запрос.УстановитьПараметр("ЕстьВводыОстатков", ЕстьВводыОстатков);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНастроек.Идентификатор,
	|	ТаблицаНастроек.Представление,
	|	ТаблицаНастроек.ИмяКартинки,
	|	ТаблицаНастроек.Порядок
	|ПОМЕСТИТЬ ТаблицаНастроек
	|ИЗ
	|	&ТаблицаНастроек КАК ТаблицаНастроек
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДобавленных.Идентификатор,
	|	ТаблицаДобавленных.Порядок
	|ПОМЕСТИТЬ ТаблицаДобавленных
	|ИЗ
	|	&ТаблицаДобавленных КАК ТаблицаДобавленных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНастроек.Идентификатор,
	|	ТаблицаНастроек.Представление,
	|	ТаблицаНастроек.ИмяКартинки,
	|	ВЫБОР
	|		КОГДА ТаблицаДобавленных.Идентификатор ЕСТЬ NULL
	|			ТОГДА ТаблицаНастроек.Порядок + &КоличествоВыводимых
	|		ИНАЧЕ ТаблицаДобавленных.Порядок
	|	КОНЕЦ КАК Порядок,
	|	ВЫБОР
	|		КОГДА ТаблицаДобавленных.Идентификатор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Выводить
	|ИЗ
	|	ТаблицаНастроек КАК ТаблицаНастроек
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДобавленных КАК ТаблицаДобавленных
	|		ПО ТаблицаНастроек.Идентификатор = ТаблицаДобавленных.Идентификатор
	|ГДЕ
	|	(НЕ ТаблицаНастроек.Идентификатор = ""ВводНачальныхОстатков""
	|			ИЛИ НЕ &ЕстьВводыОстатков)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	БыстрыеДействия.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФорму()
	
	Колонка = 0;
	ТекущаяГруппа = Неопределено;
	Для каждого Стр Из БыстрыеДействия Цикл
		Колонка = Колонка+1;
		Если ТекущаяГруппа=Неопределено ИЛИ Колонка>=КоличествоКартинокВСтроке Тогда
			Колонка = 1;
			ТекущаяГруппа = Элементы.Добавить("ГруппаГоризонтальная"+Элементы.ГруппаБыстрыеДействия.ПодчиненныеЭлементы.Количество(), Тип("ГруппаФормы"), Элементы.ГруппаБыстрыеДействия);
			ТекущаяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ТекущаяГруппа.ОтображатьЗаголовок = Ложь;
			ТекущаяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		КонецЕсли;
		ИмяГруппы = "ГруппаБыстроеДействие"+Стр.Идентификатор;
		Группа = Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ТекущаяГруппа);
		Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		Группа.ОтображатьЗаголовок = Ложь;
		Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Если Стр.Выводить Тогда
			Группа.ЦветФона = Новый Цвет(255, 232, 63);
		Иначе
			Группа.ЦветФона = Новый Цвет(255, 255, 255);
		КонецЕсли; 
		ИмяЭлемента = "БыстроеДействие"+Стр.Идентификатор;
		Элемент = Элементы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), Группа);
		Элемент.Вид = ВидДекорацииФормы.Картинка;
		Элемент.Гиперссылка = Истина;
		Элемент.Ширина = 12;
		Элемент.Высота = 5;
		Элемент.РазмерКартинки = РазмерКартинки.Пропорционально;
		Элемент.Подсказка = Стр.Представление;
		Если НЕ ПустаяСтрока(Стр.ИмяКартинки) Тогда
			Элемент.Картинка = БиблиотекаКартинок[Стр.ИмяКартинки+"Большая"];
		КонецЕсли;
		Элемент.РазрешитьНачалоПеретаскивания = Истина;
		Элемент.РазрешитьПеретаскивание = Истина;
		Элемент.ПропускатьПриВводе = Истина;
		Элемент.УстановитьДействие("Нажатие", "Подключаемый_БыстроеДействиеНажатие");
		Элемент.УстановитьДействие("НачалоПеретаскивания", "Подключаемый_БыстроеДействиеНачалоПеретаскивания");
		Элемент.УстановитьДействие("ПроверкаПеретаскивания", "Подключаемый_БыстроеДействиеПроверкаПеретаскивания");
		Элемент.УстановитьДействие("Перетаскивание", "Подключаемый_БыстроеДействиеПеретаскивание");
		ИмяЗаголовка = "ЗаголовокБыстроеДействие"+Стр.Идентификатор;
		ЭлементЗаголовок = Элементы.Добавить(ИмяЗаголовка, Тип("ДекорацияФормы"), Группа);
		ЭлементЗаголовок.Вид = ВидДекорацииФормы.Надпись;
		ЭлементЗаголовок.Ширина = 12;
		ЭлементЗаголовок.Заголовок = Стр.Представление;
		ЭлементЗаголовок.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
	КонецЦикла;
	
	// Обход невозможности перетаскивания текущего элемента для вебклиента
	Группа = Элементы.Добавить("ГруппаЗаглушка", Тип("ГруппаФормы"), ТекущаяГруппа);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.ОтображатьЗаголовок = Ложь;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Элемент = Элементы.Добавить("Заглушка", Тип("ДекорацияФормы"), Группа);
	Элемент.Вид = ВидДекорацииФормы.Картинка;
	Элемент.Гиперссылка = Истина;
	Элемент.Ширина = 12;
	Элемент.Высота = 5;
	Элемент.РазмерКартинки = РазмерКартинки.Пропорционально;
	Элемент.Подсказка = " ";
	ЭлементЗаголовок = Элементы.Добавить("ЗаглушкаЗаголовок", Тип("ДекорацияФормы"), Группа);
	ЭлементЗаголовок.Вид = ВидДекорацииФормы.Надпись;
	ЭлементЗаголовок.Ширина = 12;
	ЭлементЗаголовок.Заголовок = " ";
	ЭлементЗаголовок.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьПорядок(Таблица)
	
	Таблица.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 0)));
	ии = 0;
	Для каждого Стр Из Таблица Цикл
		Стр.Порядок = ии;
		ии = ии+1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПереместитьЭлементы(ИмяИсточник, ИмяПриемник)
	
	ГруппаИсточник = Элементы["ГруппаБыстроеДействие"+ИмяИсточник];
	ГруппаПриемник = Элементы["ГруппаБыстроеДействие"+ИмяПриемник];
	
	СмещатьВлево = Ложь;
	СмещатьВправо = Ложь;
	ГруппаПриемникСмещена = Ложь;
	БылоСмещениеПервогоЭлемента = Ложь;
	Колонка = 0;
	Строка = 0;
	Для каждого Стр Из БыстрыеДействия Цикл
		Колонка = Колонка+1;
		Если Строка=0 ИЛИ Колонка>=КоличествоКартинокВСтроке+?(СмещатьВправо, 1, 0) Тогда
			Колонка = 1;
			Строка = Строка+1;
			ГоризонтальнаяГруппа = Элементы.ГруппаБыстрыеДействия.ПодчиненныеЭлементы.Получить(Строка-1);
		КонецЕсли;
		ТекущаяГруппа = ГоризонтальнаяГруппа.ПодчиненныеЭлементы.Получить(Колонка-1-?(СмещатьВлево И Колонка>1 И БылоСмещениеПервогоЭлемента, 1, 0));
		Если ТекущаяГруппа=ГруппаИсточник И НЕ СмещатьВправо Тогда
			СмещатьВлево = Истина;
			БылоСмещениеПервогоЭлемента = Ложь;
		ИначеЕсли ТекущаяГруппа=ГруппаИсточник И СмещатьВправо Тогда
			СмещатьВправо = Ложь;
		ИначеЕсли ТекущаяГруппа=ГруппаПриемник И НЕ СмещатьВлево Тогда
			СмещатьВправо = Истина;
		ИначеЕсли ТекущаяГруппа=ГруппаПриемник И СмещатьВлево Тогда
			СмещатьВлево = Ложь;
			БылоСмещениеПервогоЭлемента = Ложь;
			Если Колонка=1 Тогда
				ГруппаПриемникСмещена = Истина;
			КонецЕсли; 
		КонецЕсли;
		Если СмещатьВлево И Колонка=1 И Строка>1 Тогда
			// При смещении элементов влево первый элемент каждой строки переносится в предыдущую группу
			ГруппаСмещения = Элементы.ГруппаБыстрыеДействия.ПодчиненныеЭлементы.Получить(Строка-2);
			Элементы.Переместить(ТекущаяГруппа, ГруппаСмещения);
			БылоСмещениеПервогоЭлемента = Истина;
		КонецЕсли; 
		Если СмещатьВправо И Колонка=ГоризонтальнаяГруппа.ПодчиненныеЭлементы.Количество() Тогда
			// При смещении элементов вправо последний элемент каждой строки переносится в следуюущую группу
			ГруппаСмещения = Элементы.ГруппаБыстрыеДействия.ПодчиненныеЭлементы.Получить(Строка);
			Элементы.Переместить(ТекущаяГруппа, ГруппаСмещения, ГруппаСмещения.ПодчиненныеЭлементы.Получить(0));
			Если ТекущаяГруппа=ГруппаПриемник Тогда
				ГруппаПриемникСмещена = Истина;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	Если ГруппаПриемникСмещена Тогда
		// Произошло смещение элемента-приемника, переносим в предыдущую группу
		Элементы.Переместить(ГруппаИсточник, Элементы.ГруппаБыстрыеДействия.ПодчиненныеЭлементы.Получить(Элементы.ГруппаБыстрыеДействия.ПодчиненныеЭлементы.Индекс(ГруппаПриемник.Родитель)-1));
	Иначе
		Элементы.Переместить(ГруппаИсточник, ГруппаПриемник.Родитель, ГруппаПриемник);
	КонецЕсли;
	
	// Отражение изменений в таблице быстрых действий
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Идентификатор", ИмяИсточник);
	СтрокиИсточник = БыстрыеДействия.НайтиСтроки(СтруктураОтбора);
	СтруктураОтбора.Вставить("Идентификатор", ИмяПриемник);
	СтрокиПриемник = БыстрыеДействия.НайтиСтроки(СтруктураОтбора);
	Если СтрокиИсточник.Количество()>0 И СтрокиПриемник.Количество()>0 Тогда
		ИндексИсточник = БыстрыеДействия.Индекс(СтрокиИсточник[0]);
		ИндексПриемник = БыстрыеДействия.Индекс(СтрокиПриемник[0]);
		БыстрыеДействия.Сдвинуть(ИндексИсточник, ИндексПриемник-ИндексИсточник);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Функция КоличествоВыводимыхКнопок()
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Выводить", Истина);
	Возврат БыстрыеДействия.НайтиСтроки(СтруктураОтбора).Количество();
	
КонецФункции

&НаКлиенте
Процедура СброситьАктивныйЭлемент()
	
	ТекущийЭлемент = Элементы["Заглушка"];
	
КонецПроцедуры
 
#КонецОбласти
 

