///////////////////////////////////////////////////////////////////////////////
// <Телеграм-Бот Записей на прием.>
// 
////////////////////////////////////////////////////////////////////////////////

Перем Телеграм Экспорт;
Перем Результат;
Перем ДанныеСообщения;

////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД БОТА
//

Функция ПолучитьСправку(Сообщение)
	
	ТекстСообщения = ПолучитьМакет("Справка").ПолучитьТекст();
	
	Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения);
	
	Возврат Результат;
	
КонецФункции

Функция ОставитьОтзыв(Сообщение) Экспорт
	
	ТекстСообщения = "Оставьте отзыв о боте следующим сообщением и он будет направлен разработчику.";
	
	Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения);
	
	Если Результат.Результат Тогда
		ОтправленноеСообщение = Результат.result;	// Возвращаем ссылку на отправленное сообщение
	Иначе
		//ТекстОписания = СтрШаблон("%1
		//|Чат: %2
		//|Текст: %3", Результат.description, Сообщение.Чат, ТекстСообщения);
		ТекстОписания = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку("[description]
		|Чат: [Чат]
		|Текст: [ТекстСообщения]", Новый Структура("description, Чат, ТекстСообщения",Результат["description"], Сообщение.Чат, ТекстСообщения));
		ЗаписьЖурналаРегистрации("ИнфоБот", УровеньЖурналаРегистрации.Ошибка,,, ТекстОписания);
	КонецЕсли;
	
	ЗаписьСессии = РегистрыСведений.СессииКонтрагентов.СоздатьМенеджерЗаписи();
	ЗаписьСессии.Бот = Телеграм.Бот;
	ЗаписьСессии.Идентификатор = Сообщение.Контрагент;
	ЗаписьСессии.ДатаСоздания = ТекущаяДатаСеанса();
	ЗаписьСессии.ДанныеСессии = ЗначениеВСтрокуВнутр(Новый Структура("Действие, Сообщение", "Отзыв", ОтправленноеСообщение.message_id));
	ЗаписьСессии.Записать();
	
	Возврат Результат;
	
КонецФункции

Процедура ОбработатьРезультат(Сообщение, ТекстСообщения, Результат)
	
	Если НЕ Результат = Неопределено Тогда
		Если Результат["ok"] Тогда
			РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
		Иначе 
			//ТекстОписания = СтрШаблон("%1
			//|Чат: %2
			//|Текст: %3", Результат.description, Сообщение.Чат, ТекстСообщения);
			ТекстОписания = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку("[description]
			|Чат: [Чат]
			|Текст: [ТекстСообщения]", Новый Структура("description, Чат, ТекстСообщения",Результат["description"], Сообщение.Чат, ТекстСообщения));
			ЗаписьЖурналаРегистрации("Телеграм.TestZakazUslugBot", УровеньЖурналаРегистрации.Ошибка,,, ТекстОписания);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ УПРАВЛЕНИЯ СООБЩЕНИЯМИ TELEGRAM
//


Процедура ПрочитатьИОбработатьСообщение(Сообщение) Экспорт
	
	Если ПовторныйЗапрос(Сообщение) Тогда
		//Телеграм.ОтметитьКакОтработан(Сообщение.update_id);
		РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
		Возврат;
	КонецЕсли;
	
	ДанныеСообщения = Сообщение.ДанныеЗапроса.Получить(); //Боты.ПолучитьДанныеСообщения(Телеграм.Бот, Сообщение.update_id);
	
	#Область Кнопки
	Если Сообщение.ТипОтвета = Перечисления.ТипыОтветовТелеграм.Кнопка Тогда	
		
		Если ДанныеСообщения.callback_query.data = "ИГНОР" Тогда
			// ничего не делаем
			Результат = Новый Структура("ok", Истина);
		ИначеЕсли ДанныеСообщения.callback_query.data = "ПРЕДЫДУЩИЙМЕСЯЦ" Тогда
			
			ПоказатьКалендарь(Сообщение, -1);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "СЛЕДУЮЩИЙМЕСЯЦ" Тогда
			
			ПоказатьКалендарь(Сообщение, 1);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "ВЫБОРМЕСЯЦА" Тогда
			
			ПоказатьСписокМесяцев(Сообщение, 1);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "ВЫБРАТЬДАТУ" Тогда
			
			ПоказатьКалендарь(Сообщение, 0);
			
		ИначеЕсли Лев(ДанныеСообщения.callback_query.data,6) = "МЕСЯЦ_" Тогда
			
			СмещениеКвоМесяцев = Сред(ДанныеСообщения.callback_query.data,7,СтрДлина(ДанныеСообщения.callback_query.data));
			ПоказатьКалендарь(Сообщение, СмещениеКвоМесяцев);
			
		ИначеЕсли Лев(ДанныеСообщения.callback_query.data,14) = "ДЕНЬКАЛЕНДАРЯ_" Тогда
			
			ПоказатьВремя(Сообщение);
			
		ИначеЕсли Лев(ДанныеСообщения.callback_query.data,6) = "ВРЕМЯ_" Тогда
			
			ЗаписатьВремя(Сообщение);			
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "ВЫБОРУСЛУГ" Тогда
			
			ВыборУслуг(Сообщение);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "УДАЛИТЬЗАКАЗ" Тогда
			
			УдалитьЗаказ(Сообщение);
			
		Иначе // была нажата кнопка, поищем её в ВариантахОтветов
			мОтветов = НайтиОтвет(ДанныеСообщения.callback_query.data);
			стрОтвет = мОтветов[0];
			Если стрОтвет.Операция = "СсылкаМастер" Тогда
				
				Мастер = стрОтвет.Значение; 
				ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
				ПредыдущийСообщение.Вставить("Мастер", Мастер);
				Боты.СоздатьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат, ПредыдущийСообщение);
				
				ВыборУслуг(Сообщение);
				
			ИначеЕсли стрОтвет.Операция = "СсылкаНоменклатура" Тогда
				
				Номенклатура = стрОтвет.Значение; 
				ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
				
				Мастер = "";
				ПредыдущийСообщение.Свойство("Мастер", Мастер);
				
				ПредыдущийСообщение.Вставить("Номенклатура", Номенклатура);
				ПредыдущийСообщение.Вставить("Мастер", Мастер);
				Боты.СоздатьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат, ПредыдущийСообщение);
				
				ВыборУслуг(Сообщение);	
				
			ИначеЕсли стрОтвет.Операция = "СсылкаЗаказ" Тогда
				
				ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
				
				Мастер = "";
				ПредыдущийСообщение.Свойство("Мастер", Мастер);
				
				// При редактировании заказа, сделаем его непроведенным
				// и очистим время записи
				Заказ = стрОтвет.Значение;
				ДокЗаказ = Заказ.ПолучитьОбъект();
				ДокЗаказ.ОчиститьВремяЗаписиПоМастеру(Мастер);
				Попытка
					ДокЗаказ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Исключение
					ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,ДокЗаказ,Мастер,ОписаниеОшибки());
					РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
					СообщитьОбОшибке(Сообщение, "Помилка відміни проведення запису!"); 
					Возврат;
				КонецПопытки;
				
				НовоеСообщение = Новый Структура;
				НовоеСообщение.Вставить("Заказ", Заказ);
				НовоеСообщение.Вставить("Мастер", Мастер);
				Боты.СоздатьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат, НовоеСообщение);
				
				ВыборУслуг(Сообщение);
				
			//ИначеЕсли стрОтвет.Операция = "УдалитьЗаказ" Тогда
			//	
				//Заказ = стрОтвет.Значение; 
				//ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
				//ПредыдущийСообщение.Вставить("Заказ", Заказ);
				//Боты.СоздатьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат, ПредыдущийСообщение);
				//
				//ВыборУслуг(Сообщение);
			//	Результат = Новый Структура("ok", Истина);
			Иначе 
				ТекстСообщения = "Не відома команда";
				Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения);
			КонецЕсли; 
		КонецЕсли;
		#КонецОбласти
		#Область Текст
	ИначеЕсли Сообщение.ТипОтвета = Перечисления.ТипыОтветовТелеграм.Текст Тогда	
		
		ВыборкаМастера = ПолучитьМастеров(Телеграм.Бот);
		ВыборкаМастера.Следующий();
		Мастер = ВыборкаМастера.Мастер;
		Боты.СоздатьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат, Новый Структура("Мастер", Мастер));
		
		Если СокрЛП(ДанныеСообщения.message.text) = "/start"  Тогда
			ТекстСообщения = "Привіт, " + ДанныеСообщения.message.chat.first_name + "!" + Символы.ПС + 
			"Для запису, натисни кнопку ""Новий запис"" "; // + Телеграм.Эмоджи.point_down;
			Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМеню());
		ИначеЕсли СокрЛП(ДанныеСообщения.message.text) = "Новий запис" Тогда 
			ВыборУслуг(Сообщение);
		ИначеЕсли СокрЛП(ДанныеСообщения.message.text) = "Мої записи" Тогда 
			ПоказатьЗаписиКонтрагента(Сообщение.Чат, Результат);
		Иначе 
			ТекстСообщения = "Не відома команда";
			Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения);
		КонецЕсли;
		
	Иначе // неожидаемый тип сообщения просто пропукаем его
		Результат = Новый Структура("ok", Истина);
	КонецЕсли;
	#КонецОбласти
	ОбработатьРезультат(Сообщение, ТекстСообщения, Результат);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

////////////////////////////////////////////////////////////////////////////////
//  Создание кнопок 

Функция ПолучитьКнопкиМеню()
	
	МассивСтрок = Новый Массив;
	
	//КнопкаЗАПИСАТЬСЯ = Телеграм.InlineKeyboardButton("Записатися", ,"ЗАПИСАТЬСЯ");
	//СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаЗАПИСАТЬСЯ);
	//Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	//InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	//
	//Возврат InlineKeyboard;
	
	КнопкаЗАПИСАТЬСЯ = Телеграм.KeyboardButton("Новий запис");
	КнопкаМОИЗАПИСИ = Телеграм.KeyboardButton("Мої записи");
	
	СтрокаКнопок1 = Телеграм.ReplyKeyboardMarkup_add(КнопкаЗАПИСАТЬСЯ,КнопкаМОИЗАПИСИ);
	Телеграм.ReplyKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	ReplyKeyboard = Телеграм.ReplyKeyboardMarkup(МассивСтрок);
	
	Возврат ReplyKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиМастера(Бот)
	
	МассивСтрок = Новый Массив;
	
	ВыборкаМастера = ПолучитьМастеров(Бот);
	
	Пока ВыборкаМастера.Следующий() Цикл
		Если ДобавитьВариантОтвета(ВыборкаМастера.Мастер.УникальныйИдентификатор(), "СсылкаМастер", ВыборкаМастера.Мастер) Тогда
			КнопкаМастер = Телеграм.InlineKeyboardButton(СокрЛП(ВыборкаМастера.Мастер) + "(" + СокрЛП(ВыборкаМастера.МастерСпециальность) + ")", , ВыборкаМастера.Мастер.УникальныйИдентификатор); //"МАСТЕР_" + СокрЛП(ВыборкаМастера.Мастер)
			СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаМастер);
			Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);	
		КонецЕсли;
	КонецЦикла;
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиУслуги(Мастер, мУслуг = Неопределено)
	
	МассивСтрок = Новый Массив;
	
	ВыборкаУслугиМастера = ПолучитьУслугиМастера(Мастер);
	
	Пока ВыборкаУслугиМастера.Следующий() Цикл
		Если ДобавитьВариантОтвета(ВыборкаУслугиМастера.Ссылка.УникальныйИдентификатор(), "СсылкаНоменклатура", ВыборкаУслугиМастера.Ссылка) Тогда
			ТекстКнопки = СокрЛП(ВыборкаУслугиМастера.Наименование) + " - " + СокрЛП(ВыборкаУслугиМастера.Цена);
			Если (НЕ мУслуг = Неопределено) Тогда
				Если (мУслуг.Количество() > 0) Тогда
					Если НЕ мУслуг.Найти(ВыборкаУслугиМастера.Ссылка) = Неопределено Тогда
						// добавим отметку выбранной услуги
						ТекстКнопки = Строка(Телеграм.Эмоджи.heavy_check_mark) + " " + ТекстКнопки;	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			КнопкаМастер = Телеграм.InlineKeyboardButton(ТекстКнопки, ,Строка(ВыборкаУслугиМастера.Ссылка.УникальныйИдентификатор())); //"УСЛУГА_" + СокрЛП(ВыборкаУслугиМастера.Наименование)
			СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаМастер);
			Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
			
		КонецЕсли;
	КонецЦикла;
	
	КнопкаВыбратьДату = Телеграм.InlineKeyboardButton("Вибрати дату",, "ВЫБРАТЬДАТУ");
	СтрокаКнопок2 = Телеграм.InlineKeyboardMarkup_add(КнопкаВыбратьДату);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок2);
	
	ТекстКнопки = Телеграм.Эмоджи.x + " Видалити запис " + Телеграм.Эмоджи.arrow_up;
	КнопкаУдалитьЗаказ = Телеграм.InlineKeyboardButton(ТекстКнопки, , "УДАЛИТЬЗАКАЗ");
	СтрокаКнопок3 = Телеграм.InlineKeyboardMarkup_add(КнопкаУдалитьЗаказ);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок3);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиКалендарь(ТекДата, Мастер)
	
	МассивСтрок = Новый Массив;
	
	// первая строка - Месяц и Год
	КнопкаНазад = Телеграм.InlineKeyboardButton("<", , "ПРЕДЫДУЩИЙМЕСЯЦ");
	КнопкаВперед = Телеграм.InlineKeyboardButton(">", , "СЛЕДУЮЩИЙМЕСЯЦ");
	КнопкаМесяцГод = Телеграм.InlineKeyboardButton(Формат(ТекДата,"Л=uk_UA;ДФ=ММММ.гггг"), ,"ВЫБОРМЕСЯЦА");
	СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаНазад, КнопкаМесяцГод, КнопкаВперед);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	
	// вторая строка - Дни Недели
	мДниНедели = Новый Массив;
	мДниНедели.Добавить("Пн");
	мДниНедели.Добавить("Вт");
	мДниНедели.Добавить("Ср");
	мДниНедели.Добавить("Чт");
	мДниНедели.Добавить("Пт");
	мДниНедели.Добавить("Сб");
	мДниНедели.Добавить("Нд");
	
	СтрокаКнопок2 = Новый Массив;
	Для каждого ДеньНедели Из мДниНедели Цикл
		КнопкаДень = Телеграм.InlineKeyboardButton(ДеньНедели, ,"ИГНОР");
		СтрокаКнопок2.Добавить(КнопкаДень);
	КонецЦикла;
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок2);
	
	// дни календаря
	МассивНедель = ПолучитьКалендарьМастераНаМесяц(Год(ТекДата), Месяц(ТекДата), Мастер);
	
	Для каждого МассивДней Из МассивНедель Цикл
		СтрокаКнопокНеделя = Новый Массив;
		Для каждого День Из МассивДней Цикл
			Если День = 0 Тогда
				КнопкаДень = Телеграм.InlineKeyboardButton(" ", , "ИГНОР");
			Иначе 
				КнопкаДень = Телеграм.InlineKeyboardButton(День(День), , "ДЕНЬКАЛЕНДАРЯ_"+Строка(День));
			КонецЕсли;
			СтрокаКнопокНеделя.Добавить(КнопкаДень);
		КонецЦикла;
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопокНеделя);
	КонецЦикла;
	
	// подвал календаря
	КнопкаВыборУслуг = Телеграм.InlineKeyboardButton("Вибір послуг", , "ВЫБОРУСЛУГ");
	
	СтрокаКнопокВпередНазад = Телеграм.InlineKeyboardMarkup_add(КнопкаВыборУслуг);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопокВпередНазад);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиМесяцы(ТекДата)
	
	МассивСтрок = Новый Массив;
	ИсходныйМесяц = Месяц(ТекДата);
	ТекДата = НачалоГода(ТекДата);
	
	Для Ряд = 1 По 4 Цикл
		
		СтрокаКнопокСезона = Новый Массив;
		
		Для Колонка = 1 По 3 Цикл
			
			КнопкаМесяцСезона = Телеграм.InlineKeyboardButton(Формат(ТекДата,"Л=uk_UA;ДФ=ММММ.гггг"), , "МЕСЯЦ_"+((ИсходныйМесяц - Месяц(ТекДата))*-1));
			СтрокаКнопокСезона.Добавить(КнопкаМесяцСезона);
			ТекДата = ДобавитьМесяц(ТекДата,1)
			
		КонецЦикла;
		
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопокСезона);	
		
	КонецЦикла;
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиВремя(ТекДата, Мастер, ДлительностьУслуг)
	
	КвоНужноЗаписей = ДлительностьУслуг/Мастер.ШагЗаписи;
	КвоОстатокЗаписей = 0;
	
	МассивСтрок = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеДниМастеров.ДатаВремяЗаписи КАК ВремяЗаписи,
	|	ЗаписиНаПрием.Номекнлатура КАК Номекнлатура,
	|	ЗаписиНаПрием.Контрагент КАК Контрагент
	|ИЗ
	|	РегистрСведений.РабочиеДниМастеров КАК РабочиеДниМастеров
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиНаПрием КАК ЗаписиНаПрием
	|		ПО РабочиеДниМастеров.Мастер = ЗаписиНаПрием.Мастер
	|			И РабочиеДниМастеров.ДатаВремяЗаписи = ЗаписиНаПрием.ДатаВремяЗаписи
	|ГДЕ
	|	РабочиеДниМастеров.Мастер = &Мастер
	|	И РабочиеДниМастеров.ДатаВремяЗаписи МЕЖДУ &НачДня И &КонДня
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВремяЗаписи УБЫВ";
	//|	И ЗаписиНаПрием.Номекнлатура <> НЕОПРЕДЕЛЕНО";
	
	Запрос.УстановитьПараметр("Мастер", Мастер);
	Запрос.УстановитьПараметр("НачДня", НачалоДня(ТекДата));
	Запрос.УстановитьПараметр("КонДня", КонецДня(ТекДата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	тзЗаписей = РезультатЗапроса.Выгрузить();
	тзЗаписей.Колонки.Добавить("Выводить");
	
	Для каждого строкаТз Из тзЗаписей Цикл
		Если строкаТз.ВремяЗаписи < ТекущаяДатаСеанса() Тогда
			строкаТз.Выводить = Ложь;
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(строкаТз.Номекнлатура) Тогда
			строкаТз.Выводить = Ложь;
			КвоОстатокЗаписей = 0;
			Продолжить;
		КонецЕсли;
		КвоОстатокЗаписей = КвоОстатокЗаписей + 1;
		Если КвоОстатокЗаписей >= КвоНужноЗаписей Тогда
			строкаТз.Выводить = Истина;
		Иначе 
			строкаТз.Выводить = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	тзЗаписей.Сортировать("ВремяЗаписи");
	Н = 1;
	СтрокаКнопок = Новый Массив;
	ЕстьСвободноеВремя = Ложь;
	Для каждого сЗапись Из тзЗаписей Цикл
		
		Если сЗапись.Выводить Тогда  
			КнопкаВремя = Телеграм.InlineKeyboardButton(Формат(сЗапись.ВремяЗаписи,"Л=uk_UA;ДФ=ЧЧ:мм"), ,"ВРЕМЯ_" + сЗапись.ВремяЗаписи);
			ЕстьСвободноеВремя = Истина;
		Иначе  // время занято
			КнопкаВремя = Телеграм.InlineKeyboardButton(" ", ,"ИГНОР");
		КонецЕсли;
		
		СтрокаКнопок.Добавить(КнопкаВремя);
		Н = Н + 1;
		
		Если Н > 4 Тогда  // 4 кнопки в ряд
			Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
			СтрокаКнопок = Новый Массив;
			Н = 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтрокаКнопок.Количество() > 0 Тогда
		Пока Н < 5 Цикл
			КнопкаВремя = Телеграм.InlineKeyboardButton(" ", ,"ИГНОР");
			СтрокаКнопок.Добавить(КнопкаВремя);
			Н = Н + 1;
		КонецЦикла; 
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
	КонецЕсли;
	
	КнопкаДругойДень = Телеграм.InlineKeyboardButton("Інший день", ,"ВЫБРАТЬДАТУ");
	КнопкаВыборУслуг = Телеграм.InlineKeyboardButton("Вибір послуг", , "ВЫБОРУСЛУГ");
	СтрокаКнопок= Телеграм.InlineKeyboardMarkup_add(КнопкаДругойДень, КнопкаВыборУслуг);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Если ЕстьСвободноеВремя Тогда
		Возврат InlineKeyboard;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКнопкиВЫБРАТЬДАТУ()
	
	МассивСтрок = Новый Массив;
	СтрокаКнопок = Новый Массив;
	КнопкаДругойДень = Телеграм.InlineKeyboardButton("Інший день", ,"ВЫБРАТЬДАТУ");
	СтрокаКнопок.Добавить(КнопкаДругойДень);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиРедактироватьЗаказ(Заказ)
	
	МассивСтрок = Новый Массив;
	
	Если ДобавитьВариантОтвета(Заказ.Ссылка.УникальныйИдентификатор(), "СсылкаЗаказ", Заказ.Ссылка) Тогда
		ТекстКнопки = Телеграм.Эмоджи.memo + " Редагувати запис " + Телеграм.Эмоджи.arrow_up;
		КнопкаРедактироватьЗаказ = Телеграм.InlineKeyboardButton(ТекстКнопки, ,Строка(Заказ.Ссылка.УникальныйИдентификатор()));
	КонецЕсли;
	
	//Если ДобавитьВариантОтвета(Заказ.Ссылка.УникальныйИдентификатор(), "УдалитьЗаказ", Заказ.Ссылка) Тогда
	//	ТекстКнопки = Телеграм.Эмоджи.x + " Видалити запис " + Телеграм.Эмоджи.arrow_up;
	//	КнопкаУдалитьЗаказ = Телеграм.InlineKeyboardButton(ТекстКнопки, ,Строка(Заказ.Ссылка.УникальныйИдентификатор()));
	//КонецЕсли;
	
	СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаРедактироватьЗаказ);
	
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
//  Обработчики команд

Процедура ПоказатьКалендарь(Сообщение, СмещениеКвоМесяцев)
	
	Мастер = Неопределено; ТекДата = Неопределено; Заказ = Неопределено;
	ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
	ПредыдущийСообщение.Свойство("Мастер", Мастер);
	ПредыдущийСообщение.Свойство("Заказ", Заказ);
	ПредыдущийСообщение.Свойство("ТекДата", ТекДата);
	//Боты.УдалитьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат);
	
	Если Не Мастер = Неопределено Тогда
		
		Если НЕ ТекДата = Неопределено Тогда
			ТекДата = ДобавитьМесяц(ТекДата, СмещениеКвоМесяцев);
		Иначе 
			ТекДата = ТекущаяДатаСеанса();
		КонецЕсли;
		
		//Заказ = НайтиЗаказ(Сообщение.Чат, Результат);
		Если Заказ = Неопределено Тогда
			ТекстСообщения = "Не можливо вибрати час. Не знайдено замовлення!";
			ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,,,ТекстСообщения + Символы.ПС +ОписаниеОшибки());
			РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
			СообщитьОбОшибке(Сообщение, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ТекстСообщения = ПолучитьТекстЗаказа(Заказ);
		ТекстСообщения = ТекстСообщения + "<b>Виберіть дату:</b>";
		//Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения,,,,,ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер));
		Результат = Телеграм.editMessageText(Сообщение.Чат, Сообщение.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиКалендарь(ТекДата, Мастер));
		
		ПредыдущийСообщение.Вставить("Мастер", Мастер);
		ПредыдущийСообщение.Вставить("Заказ", Заказ);
		ПредыдущийСообщение.Вставить("ТекДата", ТекДата);
		Боты.СоздатьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат, ПредыдущийСообщение);
	Иначе
		ТекстСообщения = "Майстра не знайдено! Спробуйте ще раз.";
		ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,,,ТекстСообщения + Символы.ПС + ОписаниеОшибки());
		РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
		СообщитьОбОшибке(Сообщение, ТекстСообщения); 
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьСписокМесяцев(Сообщение, КвоМесяцев)
	
	ТекДата = Неопределено;
	ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
	ПредыдущийСообщение.Свойство("ТекДата", ТекДата);
	
	ТекстСообщения = "<b>Виберіть місяць:</b>";
	//Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения,,,,,ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер));
	Результат = Телеграм.editMessageText(Сообщение.Чат, Сообщение.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиМесяцы(ТекДата));
	
КонецПроцедуры

Процедура ВыборУслуг(Сообщение, стрОтвет = Неопределено)
	Перем мНоменклатура;
	
	ЭтоНовыйЗаказ = Ложь;
	Заказ = ""; Номенклатура = "";
	Мастер = ""; ТекДата = "";
	ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
	
	//Если ПредыдущийСообщение.Свойство("ТекЗаказ", Заказ) Тогда // получим заказ из сессии Контрагента
	//	Если Не стрОтвет = Неопределено Тогда
	//		Если стрОтвет.Операция = "РедактироватьЗаказ" Тогда // перешли по ссылке Заказа
	//			Заказ = стрОтвет.Значение;
	//		ИначеЕсли стрОтвет.Операция = "СсылкаНоменклатура" Тогда
	//			Номенклатура = стрОтвет.Значение; 
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
	//Если Заказ = Неопределено Тогда // не получили заказ, поищем
	//	Заказ = НайтиЗаказ(Сообщение.Чат, Результат);	
	//КонецЕсли;
	
	Если НЕ ПредыдущийСообщение.Свойство("Заказ", Заказ) Тогда // не нашли заказ, создадим
		Заказ = СоздатьЗаказ(Сообщение.Чат, Результат);
		ЭтоНовыйЗаказ = Истина;
	КонецЕсли;
	
	Если ПредыдущийСообщение.Свойство("Мастер", Мастер) Тогда
		
		Если ПредыдущийСообщение.Свойство("Номенклатура", Номенклатура) Тогда // уже есть выбранная Номенклатура
			// добавим в заказ
			ДокЗаказ = Заказ.ПолучитьОбъект();
			ДокЗаказ.ДобавитьНоменклатуру(Мастер, Номенклатура);
			Попытка
				ДокЗаказ.Записать();
			Исключение
				ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,ДокЗаказ,Мастер,ОписаниеОшибки());
				РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
				СообщитьОбОшибке(Сообщение, "Помилка запису послуги!"); 
				Возврат;
			КонецПопытки;
		КонецЕсли;
		мНоменклатура = Заказ.ВремяЗаписи.ВыгрузитьКолонку("Номенклатура");
		ТекстСообщения = "<b>Запис №" + Заказ.Номер + " від " + Формат(Заказ.Дата, "ДЛФ=Д") + ":</b>" + Символы.ПС;
		ТекстСообщения = ТекстСообщения + "Виберіть необхідні послуги:";
		//Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения,,,,,ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер));
		Если Не ЭтоНовыйЗаказ Тогда
			Если мНоменклатура.Количество() > 0 Тогда // есть выбранная номенклатура
				Результат = Телеграм.editMessageText(Сообщение.Чат, Сообщение.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиУслуги(Мастер, мНоменклатура)); //ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер)
			Иначе //Если ПредыдущийСообщение.Свойство("ТекДата", ТекДата) Тогда
				Результат = Телеграм.editMessageText(Сообщение.Чат, Сообщение.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиУслуги(Мастер)); //ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер)
			КонецЕсли;
		Иначе
			Если мНоменклатура.Количество() > 0 Тогда // есть выбранная номенклатура
				Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,,,ПолучитьКнопкиУслуги(Мастер, мНоменклатура)); //ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер)
			Иначе //Если ПредыдущийСообщение.Свойство("ТекДата", ТекДата) Тогда
				Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,,,ПолучитьКнопкиУслуги(Мастер)); //ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер)
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Мастер) Тогда
		ПредыдущийСообщение.Вставить("Мастер", Мастер);	
	КонецЕсли;
	Если ЗначениеЗаполнено(Заказ) Тогда
		ПредыдущийСообщение.Вставить("Заказ", Заказ);	
	КонецЕсли;
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ПредыдущийСообщение.Вставить("Номенклатура", Номенклатура);	
	КонецЕсли;
	Боты.СоздатьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат, ПредыдущийСообщение);
	
КонецПроцедуры

Процедура УдалитьЗаказ(Сообщение)
	
	Заказ = Неопределено;
	ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
	
	Если ПредыдущийСообщение.Свойство("Заказ", Заказ) Тогда // не нашли заказ, создадим
		
		ДокЗаказ = Заказ.ПолучитьОбъект();
		
		Попытка
			ДокЗаказ.УстановитьПометкуУдаления(Истина);
		Исключение
			ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,ДокЗаказ,,ОписаниеОшибки());
			РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
			СообщитьОбОшибке(Сообщение, "Помилка видалення замовлення!"); 
			Возврат;
		КонецПопытки;	
		
		ТекстСообщения = "<b>Видалено запис:</b>" + Символы.ПС + 
		"Запис №" + Заказ.Номер + " від " + Формат(Заказ.Дата, "ДЛФ=Д");
		Результат = Телеграм.editMessageText(Сообщение.Чат, Сообщение.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьВремя(Сообщение)
	
	ЗаписьНаДату = Сред(ДанныеСообщения.callback_query.data,15,СтрДлина(ДанныеСообщения.callback_query.data));
	
	Мастер = Неопределено; Заказ = Неопределено;  
	ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
	ПредыдущийСообщение.Свойство("Мастер", Мастер);
	ПредыдущийСообщение.Свойство("Заказ", Заказ);
	
	//Заказ = НайтиЗаказ(Сообщение.Чат, Результат);
	Если Заказ = Неопределено Тогда
		ТекстСообщения = "Не можливо вибрати час. Не знайдено замовлення!";
		ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,,ЗаписьНаДату,ТекстСообщения + Символы.ПС +ОписаниеОшибки());
		РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
		СообщитьОбОшибке(Сообщение, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Мастер = Неопределено Тогда
		ТекстСообщения = "Не можливо вибрати час. Не знайдено замовлення!";
		ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,,ЗаписьНаДату,ТекстСообщения + Символы.ПС +ОписаниеОшибки());
		РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
		СообщитьОбОшибке(Сообщение, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	//мНоменклатура = Заказ.ВремяЗаписи.ВыгрузитьКолонку("Номенклатура");
	//ТекстСообщения = "Запис на " + Формат(ЗаписьНаДату, "ДФ=дд ММММ гггг") + Символы.ПС;
	////ТекстСообщения = "Виберіть послуги, а потім дату:";
	////Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения,,,,,ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер));
	//Результат = Телеграм.editMessageText(Сообщение.Чат, Сообщение.message_id,, ТекстСообщения,,,ПолучитьКнопкиУслуги(Мастер, мНоменклатура));	
	
	//стрДанныеЗаказа = ПолучитьДанныеЗаказа(Заказ, Мастер);
	ТекстСообщения = ПолучитьТекстЗаказа(Заказ);
	
	ДлительностьУслуг = Заказ.ВремяЗаписи.Итог("Длительность");//стрДанныеЗаказа.ДлительностьУслуг;
	
	Клавиатура = ПолучитьКнопкиВремя(ЗаписьНаДату, Мастер, ДлительностьУслуг);
	Если Клавиатура = Неопределено Тогда //нет свбодного времени
		ТекстСообщения = ТекстСообщения + "Немає вільного часу. Виберіть інший день:";
		Клавиатура = ПолучитьКнопкиВЫБРАТЬДАТУ();
	Иначе 
		ТекстСообщения = ТекстСообщения + "Виберіть час:";
	КонецЕсли;
	Результат = Телеграм.editMessageText(Сообщение.Чат, Сообщение.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,Клавиатура);
	
	ПредыдущийСообщение.Вставить("Мастер", Мастер);
	ПредыдущийСообщение.Вставить("Заказ", Заказ);
	ПредыдущийСообщение.Вставить("ТекДата", ЗаписьНаДату);
	//Боты.УдалитьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат);
	Боты.СоздатьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат, ПредыдущийСообщение);
	
КонецПроцедуры

Процедура ЗаписатьВремя(Сообщение)
	
	ЗаписьНаДату = Сред(ДанныеСообщения.callback_query.data,7,СтрДлина(ДанныеСообщения.callback_query.data));
	
	Мастер = Неопределено; Заказ = Неопределено;
	//Услуга = Неопределено;
	ПредыдущийСообщение = Боты.ПолучитьОписаниеСессииКонтрагента(Телеграм.Бот, Сообщение.Чат);
	ПредыдущийСообщение.Свойство("Мастер", Мастер);
	ПредыдущийСообщение.Свойство("Заказ", Заказ);
	//ПредыдущийСообщение.Свойство("Услуга", Услуга);
	
	//Заказ = НайтиЗаказ(Сообщение.Чат, Результат);
	Если Заказ = Неопределено Тогда
		Заказ = СоздатьЗаказ(Сообщение.Чат, Результат);
	КонецЕсли;
	
	ДокЗаказ = Заказ.ПолучитьОбъект();
	ДокЗаказ.ЗаписатьВремя(Мастер, ЗаписьНаДату);  //проставить время по строчкам
	Попытка
		ДокЗаказ.Записать(РежимЗаписиДокумента.Проведение);
		ТекстСообщения = "Запис виконано!" + Символы.ПС + 
		"Дата та час: " + Строка(ЗаписьНаДату) + Символы.ПС +
		"Майстер: " + Мастер + Символы.ПС;
		
		СтруктураОтбора = Новый Структура("Мастер", Мастер);
		МассивНайденныхСтрок = ДокЗаказ.ВремяЗаписи.НайтиСтроки(СтруктураОтбора);
		Для каждого строкаДок Из МассивНайденныхСтрок Цикл
			ТекстСообщения = ТекстСообщения + "Послуги: " + строкаДок.Номенклатура + " - " + строкаДок.Номенклатура.Цена + Символы.ПС;
		КонецЦикла;
	Исключение
		ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,ДокЗаказ,Мастер,ОписаниеОшибки());
		РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, Сообщение.update_id);
		СообщитьОбОшибке(Сообщение, "Помилка збереження запису! Зверніться в підтримку"); 
		Возврат;
	КонецПопытки;
	
	Результат = Телеграм.editMessageText(Сообщение.Чат, Сообщение.message_id,, ТекстСообщения,,,ПолучитьКнопкиРедактироватьЗаказ(Заказ));
	//Результат = Телеграм.deleteMessage(Сообщение.Чат, Сообщение.message_id);
	//Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМеню());
	
	//Боты.УдалитьСессиюКонтрагента(Телеграм.Бот, Сообщение.Чат);
	
КонецПроцедуры

Процедура ПоказатьЗаписиКонтрагента(ИДКонтрагента, Результат)
	
	ТекстСообщения = "<b>Ваші записи:</b>" + Символы.ПС;
	
	ОписанияЗаказов = ПолучитьОписаниеЗаказа(ИДКонтрагента, Результат);
	
	Для каждого ОписаниеЗаказа Из ОписанияЗаказов Цикл
		
		Заказ = ОписаниеЗаказа.Ключ; 
		ТекстСообщения = ОписаниеЗаказа.Значение;
		
		Результат = Телеграм.sendMessage(ИДКонтрагента, ТекстСообщения, Перечисления.ВидФорматирования.HTML,,,,ПолучитьКнопкиРедактироватьЗаказ(Заказ));
		
	КонецЦикла;
	
КонецПроцедуры

// Описание: Возвращает Соответствие ДокументСсылка.ЗаписьНаПрием и ТекстовоеПредставление Заказа
//
// Параметры (название, тип, дифференцированное значение)
// 			ИДКонтрагента - Идентификатор Телеграм Контрагента
// 			Результат - Структура ответа сервера Телеграм 
Функция ПолучитьОписаниеЗаказа(ИДКонтрагента, Результат)
	
	ОписаниеЗаказа = Новый Соответствие;
	ТекстСообщения = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиНаПрием.Регистратор КАК Заказ,
	|	ЗаписиНаПрием.Номекнлатура КАК Номенклатура,
	|	ЗаписиНаПрием.Номекнлатура.Цена КАК НомекнлатураЦена,
	|	ЗаписиНаПрием.ДатаВремяЗаписи КАК ДатаВремяЗаписи,
	|	НАЧАЛОПЕРИОДА(ЗаписиНаПрием.ДатаВремяЗаписи, ДЕНЬ) КАК ДатаЗаписи,
	|	ЗаписиНаПрием.Регистратор.Номер КАК РегистраторНомер,
	|	ЗаписиНаПрием.Регистратор.Дата КАК РегистраторДата
	|ИЗ
	|	РегистрСведений.ЗаписиНаПрием КАК ЗаписиНаПрием
	|ГДЕ
	|	ЗаписиНаПрием.ДатаВремяЗаписи >= &ТекДата
	|	И ЗаписиНаПрием.Активность = ИСТИНА
	|	И ЗаписиНаПрием.Регистратор.ИДКонтрагента = &ИДКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВремяЗаписи
	|ИТОГИ ПО
	|	Заказ";
	
	Запрос.УстановитьПараметр("ИДКонтрагента", ИДКонтрагента);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗаказы = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Заказ");
	
	Пока ВыборкаЗаказы.Следующий() Цикл
		
		ТекстСообщения = ТекстСообщения + "<b> №" + ВыборкаЗаказы.РегистраторНомер + " від " + Формат(ВыборкаЗаказы.РегистраторДата, "ДЛФ=Д") + ":</b>" + Символы.ПС;
		
		ВыборкаВремяЗаписи = ВыборкаЗаказы.Выбрать();
		
		Пока ВыборкаВремяЗаписи.Следующий() Цикл
			ТекстСообщения = ТекстСообщения + ВыборкаВремяЗаписи.ДатаВремяЗаписи + " " + ВыборкаВремяЗаписи.Номенклатура + " - " + ВыборкаВремяЗаписи.НомекнлатураЦена +Символы.ПС;
		КонецЦикла;
		
		ОписаниеЗаказа.Вставить(ВыборкаЗаказы.Заказ, ТекстСообщения);
		
		ТекстСообщения = "";
		
	КонецЦикла;

	Возврат ОписаниеЗаказа;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
//  Служебные

Функция ПолучитьКалендарьМастераНаМесяц(Год, Месяц, Мастер)
	
	МассивНедель = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеДниМастеров.НомерНедели КАК НомерНедели,
	|	НАЧАЛОПЕРИОДА(РабочиеДниМастеров.ДатаВремяЗаписи, ДЕНЬ) КАК ДеньВремяЗаписи,
	|	РабочиеДниМастеров.ДатаВремяЗаписи КАК ДатаВремяЗаписи,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаписиНаПрием.Контрагент, 1) ССЫЛКА Справочник.Контрагенты
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ЕстьКонтрагент,
	|	РабочиеДниМастеров.Рабочий КАК Рабочий
	|ИЗ
	|	РегистрСведений.РабочиеДниМастеров КАК РабочиеДниМастеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиНаПрием КАК ЗаписиНаПрием
	|		ПО РабочиеДниМастеров.Мастер = ЗаписиНаПрием.Мастер
	|			И РабочиеДниМастеров.ДатаВремяЗаписи = ЗаписиНаПрием.ДатаВремяЗаписи
	|ГДЕ
	|	РабочиеДниМастеров.Мастер = &Мастер
	|	И РабочиеДниМастеров.НомерНедели МЕЖДУ &НеделяНачало И &НеделяОкончание
	|ИТОГИ
	|	СУММА(ЕстьКонтрагент),
	|	КОЛИЧЕСТВО(Рабочий)
	|ПО
	|	НомерНедели,
	|	ДеньВремяЗаписи";
	
	Запрос.УстановитьПараметр("Мастер", Мастер);
	Запрос.УстановитьПараметр("НеделяНачало", НеделяГода(НачалоМесяца(Дата(Год, Месяц,1,0,0,0))));
	Запрос.УстановитьПараметр("НеделяОкончание", НеделяГода(КонецМесяца(Дата(Год, Месяц,1,0,0,0))));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНедели = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерНедели");
	ДатаДень = ""; ДатаДеньПрошлогоМесяца = "";
	Пока ВыборкаНедели.Следующий() Цикл
		МассивДней = Новый Массив;
		ВыборкаДни = ВыборкаНедели.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДеньВремяЗаписи");
		
		//если это первая неделя года, нужно учесть дни из последней недели предыдущего года
		Если ВыборкаНедели.НомерНедели = 1 Тогда
			ДниПредыдущегоГода = ДеньНедели(НачалоМесяца(Дата(Год, Месяц,1,0,0,0))) - 1;
			Для Д = 1 По ДниПредыдущегоГода Цикл
				МассивДней.Добавить(0);
			КонецЦикла;	
		КонецЕсли;
		
		Пока ВыборкаДни.Следующий() Цикл
			Если Месяц(ВыборкаДни.ДеньВремяЗаписи) <> Месяц Тогда
				Если ДатаДеньПрошлогоМесяца <> День(ВыборкаДни.ДеньВремяЗаписи) Тогда
					МассивДней.Добавить(0);	
					ДатаДеньПрошлогоМесяца = День(ВыборкаДни.ДеньВремяЗаписи);
				КонецЕсли;
			ИначеЕсли ТекущаяДатаСеанса() > ВыборкаДни.ДеньВремяЗаписи Тогда 	
				МассивДней.Добавить(0);
			ИначеЕсли ВыборкаДни.Рабочий = 1 Тогда //Выходной
				МассивДней.Добавить(0);
			Иначе
				//Если ДатаДень <> День(ВыборкаДни.ДатаВремяЗаписи) Тогда
					// проверить есть ли свободное время
					Если ВыборкаДни.ЕстьКонтрагент = 0 Тогда
						МассивДней.Добавить(0);
					Иначе 
						МассивДней.Добавить(Строка(ВыборкаДни.ДеньВремяЗаписи));
					КонецЕсли;
					//ДатаДень =  День(ВыборкаДни.ДатаВремяЗаписи);
				//КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		
		//если это последняя неделя года, нужно учесть дни из первой недели следующего года
		Если ВыборкаНедели.НомерНедели = 53 Тогда
			ДниСледующегоГода = 7 - ДеньНедели(КонецМесяца(Дата(Год, Месяц,1,0,0,0)));
			Для Д = 1 По ДниСледующегоГода Цикл
				МассивДней.Добавить(0);
			КонецЦикла;	
		КонецЕсли;
		
		МассивНедель.Добавить(МассивДней);
		
	КонецЦикла;
	
	Возврат МассивНедель;
	
КонецФункции

Функция ПолучитьКалендарьНаМесяц(Год, Месяц)
	
	МасивНедель = Новый Массив;
	
	Для Н = НеделяГода(НачалоМесяца(Дата(Год, Месяц,1,0,0,0))) По НеделяГода(КонецМесяца(Дата(Год, Месяц,1,0,0,0))) Цикл
		
		МассивДней = Новый Массив;
		
		ТекДата = НачалоГода(Дата(Год, Месяц,1,0,0,0)) + (Н-1)*7*24*60*60;
		
		Для Д = 0 По 6 Цикл
			Если Месяц(ТекДата) <> Месяц Тогда
				МассивДней.Добавить(0);
			Иначе 
				МассивДней.Добавить(День(ТекДата));
			КонецЕсли;
			ТекДата = ТекДата + 86400;
		КонецЦикла;
		
		МасивНедель.Добавить(МассивДней);
	КонецЦикла;
	
	Возврат МасивНедель;
	
КонецФункции

Функция ПолучитьМастеров(Бот)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МастераБотов.Бот КАК Бот,
	|	МастераБотов.Мастер КАК Мастер,
	|	МастераБотов.Мастер.Специальность КАК МастерСпециальность
	|ИЗ
	|	РегистрСведений.МастераБотов КАК МастераБотов
	|ГДЕ
	|	МастераБотов.Бот = &Бот
	|	И МастераБотов.Мастер.ПометкаУдаления = ЛОЖЬ
	|	И МастераБотов.Мастер.Работает = ИСТИНА";
	
	Запрос.УстановитьПараметр("Бот", Бот);
	
	ВыборкаМастеров = Запрос.Выполнить().Выбрать();
	
	Возврат ВыборкаМастеров;
	
КонецФункции

Функция ПолучитьУслугиМастера(Мастер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураМастеров.Наименование КАК Наименование,
	|	НоменклатураМастеров.Цена КАК Цена,
	|	НоменклатураМастеров.Длительность КАК Длительность,
	|	НоменклатураМастеров.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НоменклатураМастеров КАК НоменклатураМастеров
	|ГДЕ
	|	НоменклатураМастеров.ПометкаУдаления = ЛОЖЬ
	|	И НоменклатураМастеров.Владелец = &Мастер";
	
	Запрос.УстановитьПараметр("Мастер", Мастер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

Функция НайтиОтвет(Идентификатор)
	
	мОтветов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВариантыОтветов.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ВариантыОтветов КАК ВариантыОтветов
	|ГДЕ
	|	ВариантыОтветов.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Новый УникальныйИдентификатор(Идентификатор));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		мОтветов.Добавить(ЗначениеИзСтрокиВнутр(ВыборкаДетальныеЗаписи.Значение));
	КонецЦикла;
	
	Возврат мОтветов;
	
КонецФункции

Функция ДобавитьВариантОтвета(Идентификатор, Операция, Значение)
	
	УдачнаяЗапись = Истина;
	
	регВариантыОтветов = РегистрыСведений.ВариантыОтветов.СоздатьМенеджерЗаписи();
	регВариантыОтветов.Идентификатор = Идентификатор;
	регВариантыОтветов.Прочитать();
	
	регВариантыОтветов.Идентификатор = Идентификатор;
	регВариантыОтветов.Значение = ЗначениеВСтрокуВнутр(Новый Структура("Операция, Значение",Операция, Значение));
	регВариантыОтветов.ДатаСоздания = ТекущаяДатаСеанса();
	Попытка
		регВариантыОтветов.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("Телеграм.ЗаписьВариантаОтвета", УровеньЖурналаРегистрации.Ошибка,регВариантыОтветов,,ОписаниеОшибки());
		УдачнаяЗапись = Ложь;
	КонецПопытки;
	
	Возврат УдачнаяЗапись;
	
КонецФункции

//// Находит Документ ЗаказТелеграм по Идентификатору Телеграм,
//// если заказ не найден - создает новый и заполняет шапку
////
//// Параметры: 
//// 	ИДКонтрагента(строка) - Идентификатор пользователя в Телеграм.
//// Возвращаемое значение: 
////	ДокументСсылка.ЗаказТелеграм - найденная документ, или Неопределено если произошла ошибка записи.
////
//Функция НайтиЗаказ(ИДКонтрагента, Результат, ВыбраннаяДата = Неопределено) 
//	
//	Заказ = Неопределено;
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ ПЕРВЫЕ 1
//	|	ЗаказТелеграм.Ссылка КАК Ссылка
//	|ИЗ
//	|	Документ.ЗаписьНаПрием КАК ЗаказТелеграм
//	|ГДЕ
//	|	ЗаказТелеграм.ИДКонтрагента = &ИДКонтрагента
//	|	И НЕ ЗаказТелеграм.Проведен
//	|	И НЕ ЗаказТелеграм.ПометкаУдаления
//	|	И ЗаказТелеграм.Ссылка.Дата МЕЖДУ &НачалоДня И &КонецДня";
//	//|	И &УсловиеПериод";
//	
//	Запрос.УстановитьПараметр("ИДКонтрагента", ИДКонтрагента);
//	
//	Если ВыбраннаяДата = Неопределено Тогда
//	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДатаСеанса()));
//	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДатаСеанса()));
//	//	Запрос.УстановитьПараметр("УсловиеПериод", "ЗаказТелеграм.Ссылка.Дата МЕЖДУ &НачалоДня И &КонецДня");
//	Иначе
//		Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ВыбраннаяДата));
//		Запрос.УстановитьПараметр("КонецДня", КонецДня(ВыбраннаяДата));
//	//	Запрос.УстановитьПараметр("УсловиеПериод", "ЗаказТелеграм.ВремяЗаписи.ДатаЗаписи МЕЖДУ &НачалоДня И &КонецДня");
//	КонецЕсли;
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	Выборка = РезультатЗапроса.Выбрать();
//	Если Выборка.Следующий() Тогда 
//		Заказ = Выборка.Ссылка;
//	КонецЕсли;
//	
//	Возврат Заказ;
//	
//КонецФункции //НайтиТелеграмЗаказ

Функция СоздатьЗаказ(ИДКонтрагента, Результат)
	
	Заказ = Документы.ЗаписьНаПрием.СоздатьДокумент();
	Заказ.Заполнить(ИДКонтрагента);
	Попытка
		Заказ.Записать();
	Исключение
		Заказ = Неопределено;
		ЗаписьЖурналаРегистрации("Телеграм.СоздатьЗаказ",УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());
	КонецПопытки;
	
	Если Заказ = Неопределено Тогда // что-то пошло не так
		ТекстСообщения = "Не можливо створити запис." + Символы.ПС
		+"Запишіться за телефоном";
		Результат = Телеграм.sendMessage(ИДКонтрагента, ТекстСообщения);
		//Иначе 
		//	ТекстСообщения = "Створено запис" + Символы.ПС
		//	+"№"+Результат.Номер;
		//	Результат = Телеграм.sendMessage(ИДКонтрагента, ТекстСообщения);
	КонецЕсли;
	
	Возврат Заказ.Ссылка;
	
КонецФункции

Функция ПолучитьТекстЗаказа(Заказ)
	
	ТекстСообщения = "";
	
	ТекстСообщения = "<b>Запис №" + Заказ.Номер + " від " + Формат(Заказ.Дата, "ДЛФ=Д") + ":</b>" + Символы.ПС;
	Для каждого строкаЗаказа Из Заказ.ВремяЗаписи Цикл
		ТекстСообщения = ТекстСообщения + Формат(строкаЗаказа.ДатаВремяЗаписи, "ДЛФ=В") + " - " + строкаЗаказа.Номенклатура + " - " + строкаЗаказа.Цена +Символы.ПС;	
	КонецЦикла;
	
	Возврат ТекстСообщения;
	
КонецФункции

Функция ПолучитьДанныеЗаказа(Заказ, Мастер)
	
	Результат = Новый Структура("ДлительностьУслуг", 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаписьНаПриемВремяЗаписи.Мастер КАК Мастер,
	|	ЗаписьНаПриемВремяЗаписи.Номенклатура КАК Номенклатура,
	|	СУММА(ЗаписьНаПриемВремяЗаписи.Длительность) КАК Длительность,
	|	СУММА(ЗаписьНаПриемВремяЗаписи.Цена) КАК Цена
	|ИЗ
	|	Документ.ЗаписьНаПрием.ВремяЗаписи КАК ЗаписьНаПриемВремяЗаписи
	|ГДЕ
	|	ЗаписьНаПриемВремяЗаписи.ТипЗаписиНаПрием = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейНаПрием.Телеграм)
	|	И ЗаписьНаПриемВремяЗаписи.Мастер = &Мастер
	|	И ЗаписьНаПриемВремяЗаписи.Ссылка = &Заказ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаписьНаПриемВремяЗаписи.Мастер,
	|	ЗаписьНаПриемВремяЗаписи.Номенклатура";
	
	Запрос.УстановитьПараметр("Мастер", Мастер);
	Запрос.УстановитьПараметр("Заказ", Заказ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий(); 
		
		Результат.ДлительностьУслуг = ВыборкаДетальныеЗаписи.НоменклатураДлительность;
		Результат.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
		Результат.Вставить("НоменклатураЦена", ВыборкаДетальныеЗаписи.НоменклатураЦена);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПовторныйЗапрос(Сообщение)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеТелеграмм.text КАК text,
	|	ДанныеТелеграмм.МоментВремени
	|ИЗ
	|	РегистрСведений.ЗапросыБоту КАК ДанныеТелеграмм
	|ГДЕ
	|	ДанныеТелеграмм.id = &ИДКонтрагента
	|	И ДанныеТелеграмм.Обработан = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеТелеграмм.МоментВремени УБЫВ";
	
	Запрос.УстановитьПараметр("ИДКонтрагента", Сообщение.Чат);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.text = Сообщение.text Тогда
			РазницаВоВремени = ВыборкаДетальныеЗаписи.МоментВремени - Сообщение.МоментВремени;
			РазницаВоВремени = ?(РазницаВоВремени >= 0, РазницаВоВремени, -РазницаВоВремени);
			Если РазницаВоВремени < 2 Тогда
				Результат = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура СообщитьОбОшибке(Сообщение, ТекстСообщения)
	Результат = Телеграм.sendMessage(Сообщение.Чат, ТекстСообщения);
	ОбработатьРезультат(Сообщение, ТекстСообщения, Результат);
КонецПроцедуры
