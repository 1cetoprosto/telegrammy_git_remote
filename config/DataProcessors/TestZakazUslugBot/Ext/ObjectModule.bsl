///////////////////////////////////////////////////////////////////////////////
// <Телеграм-Бот Записей на прием.> ***
// to-do:
// 10.03.19 убрать передачу переменной ЗапросБоту, так как она стала глобальной в обработке
////////////////////////////////////////////////////////////////////////////////

Перем Телеграм Экспорт;
Перем ЗапросБоту Экспорт; // - Выборка из запроса
Перем Результат;
Перем ДанныеСообщения;
Перем СессияКонтрагента;
Перем Мастер, Заказ, ТекДата, Контрагент, ТекВремя, Номенклатура;


////////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ УПРАВЛЕНИЯ СООБЩЕНИЯМИ TELEGRAM
//

Процедура ПрочитатьИОбработатьЗапросБоту() Экспорт
	
	Перем АктивацияБота;
	Перем ИдентификаторМастера;
	
	Если ПовторныйЗапрос(ЗапросБоту) Тогда
		РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, ЗапросБоту.update_id);
		Возврат;
	КонецЕсли;
	
	ДанныеСообщения = ЗапросБоту.ДанныеЗапроса.Получить();
	
	#Область ИнициализацияПеременных
	СессияКонтрагента = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	СессияКонтрагента.Свойство("Мастер", 		Мастер);
	СессияКонтрагента.Свойство("Заказ", 		Заказ);
	СессияКонтрагента.Свойство("ТекДата", 		ТекДата);
	СессияКонтрагента.Свойство("Контрагент",	Контрагент);
	СессияКонтрагента.Свойство("ТекВремя", 		ТекВремя);
	СессияКонтрагента.Свойство("Номенклатура",	Номенклатура);
	СессияКонтрагента.Свойство("АктивацияБота",	АктивацияБота);
	Если АктивацияБота = Неопределено Тогда
		АктивацияБота = Ложь;
	КонецЕсли;
	#КонецОбласти
	
	//ЭтоДиалогСМастером = ЭтоМастер(ЗапросБоту);
	ЭтоДиалогСМастером = Ложь;
	ОписаниеМастера = ПолучитьМастераПоБоту(Телеграм.Бот);
	ОписаниеМастера.Свойство("Идентификатор", ИдентификаторМастера);
	
	Если ИдентификаторМастера <> Неопределено И ИдентификаторМастера = ЗапросБоту.Чат Тогда
		ЭтоДиалогСМастером = Истина;
	КонецЕсли;
	
	Мастер = ОписаниеМастера.Мастер;
	Если ТекДата = Неопределено Тогда
		ТекДата = ТекущаяДатаСеанса();	
	КонецЕсли;
	
	#Область Контакт
	Если ЗапросБоту.ТипОтвета = Перечисления.ТипыОтветовТелеграм.Контакт Тогда 
		
		// проверим логин
		Телефон = Прав(СокрЛП(ЗапросБоту.text),10);
		
		Если АктивацияБота Тогда
			
			Мастер = Справочники.Мастера.НайтиПоРеквизиту("Телефон", Телефон);	
			Если НЕ Мастер.Пустая() Тогда
				Если ЗаписатьИДТелеграм(Мастер, ЗапросБоту.Чат) Тогда
					ТекстСообщения = "Активація бота пройшла успішно";
					Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМенюДляМастера()); //Телеграм.ReplyKeyboardRemove()
					//Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,,,ПолучитьКнопкиГлавногоМеню());
				Иначе 
					ТекстСообщения = "Помилка запису майстра."+Символы.ПС
					+"Зв'яжіться з менеджером за телефоном +38(067) 260-31-07";
					Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
				КонецЕсли;
			Иначе
				ТекстСообщения = "Ми не знайшли Бота зареэстрованого на Ваш номер: " +СокрЛП(ЗапросБоту.text)+ Символы.ПС
				+"Зв'яжіться з нашим менеджером за телефоном +38(067) 260-31-07";
				Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения); //,,,,,ПолучитьКнопкиГлавногоМеню()
			КонецЕсли;
			
		Иначе 
			
			Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Телефон", Телефон);
			Если Контрагент.Пустая() Тогда
				Контрагент = СоздатьКонтрагента(ЗапросБоту, Результат, Телефон);
				ТекстСообщения = "Реєстрація пройшла успішно" + Символы.ПС
				+ "Для запису, натисни кнопку ""Новий запис"" ";
				Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМеню());
				//Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,,,ПолучитьКнопкиГлавногоМеню());
			Иначе
				Если ЗаписатьИДТелеграм(Контрагент, ЗапросБоту.Чат) Тогда
					ТекстСообщения = "Реєстрація пройшла успішно" + Символы.ПС
					+ "Для запису, натисни кнопку ""Новий запис"" ";
					Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМеню());
					//Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,,,ПолучитьКнопкиГлавногоМеню());
				Иначе 
					ТекстСообщения = "Помилка запису клієнта."+Символы.ПС
					+"Зв'яжіться з менеджером за телефоном +38(067) 260-31-07";
					Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	#КонецОбласти
	
	#Область Кнопки
	Если ЗапросБоту.ТипОтвета = Перечисления.ТипыОтветовТелеграм.Кнопка Тогда	
		
		Если ДанныеСообщения.callback_query.data = "ИГНОР" Тогда
			// ничего не делаем
			Результат = Новый Структура("ok", Истина);
		ИначеЕсли ДанныеСообщения.callback_query.data = "ПРЕДЫДУЩИЙМЕСЯЦ" Тогда
			
			ПоказатьКалендарь(ЗапросБоту, -1);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "СЛЕДУЮЩИЙМЕСЯЦ" Тогда
			
			ПоказатьКалендарь(ЗапросБоту, 1);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "ВЫБОРМЕСЯЦА" Тогда
			
			ПоказатьСписокМесяцев(ЗапросБоту, 1);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "ВЫБРАТЬДАТУ" Тогда
			//Если не выбраны услуги переход на выбор даты и времени должен быть невозможен.
			
			ПоказатьКалендарь(ЗапросБоту, 0);
			
		ИначеЕсли Лев(ДанныеСообщения.callback_query.data,6) = "МЕСЯЦ_" Тогда
			
			СмещениеКвоМесяцев = Сред(ДанныеСообщения.callback_query.data,7,СтрДлина(ДанныеСообщения.callback_query.data));
			ПоказатьКалендарь(ЗапросБоту, СмещениеКвоМесяцев);
			
		ИначеЕсли Лев(ДанныеСообщения.callback_query.data,14) = "ДЕНЬКАЛЕНДАРЯ_" Тогда
			
			ПоказатьВремя(ЗапросБоту);
			
		ИначеЕсли Лев(ДанныеСообщения.callback_query.data,6) = "ВРЕМЯ_" Тогда
			
			ЗаписатьВремя(ЗапросБоту);
			
			Если Не ЭтоДиалогСМастером Тогда
				ТекстСообщения = ПолучитьТекстЗаказа(Заказ, Мастер); 
				ОповеститьМастера(Мастер.Идентификатор, ТекстСообщения);
				//ТекстСообщения = "Для запису, натисни кнопку ""Новий запис"" ";
				//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМеню());
			Иначе 
				//ТекстСообщения = "Для запису, натисни кнопку ""Новий запис"" ";
				//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМенюДляМастера());
			КонецЕсли;
			
			// очистим СессияКонтрагента
			СессияКонтрагента = Новый Структура;
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "ВЫБОРУСЛУГ" Тогда
			
			ПоказатьВыборУслуг(ЗапросБоту);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "УДАЛИТЬЗАКАЗ" Тогда
			
			//Заказ = Неопределено;
			//СессияКонтрагента = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
			//СессияКонтрагента.Свойство("Заказ", Заказ);
			УдалитьЗаказ(ЗапросБоту);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "УДАЛИТЬЗАКАЗДА" Тогда
			
			УдалитьЗаказПослеПодтверждения(ЗапросБоту);
		ИначеЕсли ДанныеСообщения.callback_query.data = "ЗАПИСАТЬСЯ" Тогда
			
			Боты.УдалитьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
			// нужно очистить переменные
			Заказ = Неопределено;
			СессияКонтрагента.Вставить("Заказ", Заказ);
			
			Если ЭтоДиалогСМастером Тогда
				// запросим номер телефона клиента
				ПоказатьЗапросТелефонаКонтрагента(ЗапросБоту);
			Иначе
				
				Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Идентификатор", ЗапросБоту.Чат);
				Если Контрагент.Пустая() Тогда
					Контрагент = СоздатьКонтрагента(ЗапросБоту, Результат);
				КонецЕсли;
				
				//Заказ = СоздатьЗаказ(Контрагент, Результат);
				
				// запишем сессию контрагента
				//СессияКонтрагента = Новый Структура;
				СессияКонтрагента.Вставить("Контрагент", Контрагент);
				//СессияКонтрагента.Вставить("Заказ", Заказ);
				
				ПоказатьВыборУслуг(ЗапросБоту);
			КонецЕсли;
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "МОИЗАПИСИ" Тогда	
			
			ПоказатьЗаписиКонтрагента(ЗапросБоту.Чат, Результат);
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "КАЛЕНДАРЬ" Тогда
			
			ПоказатьКалендарьМастера();
			
		ИначеЕсли ДанныеСообщения.callback_query.data = "СВОБОДНОЕВРЕМЯ" Тогда
			
			ТекстСообщения = "Буде реалізовано в майбутньому.";
			Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
			
		Иначе // была нажата кнопка, поищем её в ВариантахОтветов
			
			мОтветов = НайтиОтвет(ДанныеСообщения.callback_query.data);
			стрОтвет = мОтветов[0];
			Если стрОтвет.Операция = "СсылкаМастер" Тогда
				
				Мастер = стрОтвет.Значение; 
				
				//СессияКонтрагента = Новый Структура;
				СессияКонтрагента.Вставить("Мастер", Мастер);
				//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
				
				ПоказатьВыборУслуг(ЗапросБоту);
				
			ИначеЕсли стрОтвет.Операция = "СсылкаНоменклатура" Тогда
				
				Номенклатура = стрОтвет.Значение;
				
				//КэшКонтрагента = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
				//
				//Мастер = ""; 
				//КэшКонтрагента.Свойство("Мастер", Мастер);
				
				//Заказ = Неопределено;
				Если Заказ = Неопределено Тогда //НЕ КэшКонтрагента.Свойство("Заказ", Заказ) не нашли заказ, создадим
					Заказ = СоздатьЗаказ(Контрагент, Результат);
					//ЭтоНовыйЗаказ = Истина;
				КонецЕсли;
				
				Если Заказ = Неопределено Тогда
					ЗафиксироватьОшибку(ЗапросБоту, "Не можливо додати послугу. Не знайдено замовлення!");
					Возврат;
				КонецЕсли;
				
				// добавим в заказ
				ДокЗаказ = Заказ.ПолучитьОбъект();
				ДокЗаказ.ДобавитьНоменклатуру(Мастер, Номенклатура);
				Попытка
					ДокЗаказ.Записать();
				Исключение
					ЗафиксироватьОшибку(ЗапросБоту, "Помилка запису послуги!");
					Возврат;
				КонецПопытки;
				
				//СессияКонтрагента = Новый Структура;
				СессияКонтрагента.Вставить("Заказ", Заказ);
				СессияКонтрагента.Вставить("Мастер", Мастер);
				//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
				
				ПоказатьВыборУслуг(ЗапросБоту);	
				
			ИначеЕсли стрОтвет.Операция = "СсылкаЗаказ" Тогда
				
				//КэшКонтрагента = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
				//
				//Мастер = Неопределено;
				//КэшКонтрагента.Свойство("Мастер", Мастер);
				
				Если Мастер = Неопределено Тогда
					ЗафиксироватьОшибку(ЗапросБоту, "Не можливо відредагувати замовлення. Не знайдено майстра!");
					Возврат;
				КонецЕсли;
				
				// При редактировании заказа, сделаем его непроведенным
				// и очистим время записи
				Заказ = стрОтвет.Значение;
				ДокЗаказ = Заказ.ПолучитьОбъект();
				ДокЗаказ.ОчиститьВремяЗаписиПоМастеру(Мастер);
				Попытка
					ДокЗаказ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Исключение
					ЗафиксироватьОшибку(ЗапросБоту, "Помилка відміни проведення запису!");
					Возврат;
				КонецПопытки;
				
				//СессияКонтрагента = Новый Структура;
				СессияКонтрагента.Вставить("Заказ", Заказ);
				СессияКонтрагента.Вставить("Мастер", Мастер);
				//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
				
				ПоказатьВыборУслуг(ЗапросБоту);
				
				//ИначеЕсли стрОтвет.Операция = "УдалитьЗаказ" Тогда
				//	
				//Заказ = стрОтвет.Значение; 
				//ПредыдущийСообщение = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
				//ПредыдущийСообщение.Вставить("Заказ", Заказ);
				//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, ПредыдущийСообщение);
				//
				//ПоказатьВыборУслуг(ЗапросБоту);
				//	Результат = Новый Структура("ok", Истина);
			Иначе 
				ТекстСообщения = "Не відома команда";
				Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
			КонецЕсли; 
		КонецЕсли;
		#КонецОбласти
		
		#Область Текст
	ИначеЕсли ЗапросБоту.ТипОтвета = Перечисления.ТипыОтветовТелеграм.Текст Тогда	
		
		Если СокрЛП(ДанныеСообщения.message.text) = "/start"  Тогда
			
			// Если идентификатор мастера еще не заполнен, значит Бот неактивирован
			Если ИдентификаторМастера = 0 Тогда
				ТекстСообщения = "Привіт, " + ДанныеСообщения.message.chat.first_name + "!"+ Символы.ПС
				+ "Бот ще не активований." + Символы.ПС
				+ "Введи код активації.";
				Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
			Иначе 
				Если ЭтоДиалогСМастером Тогда
					ТекстСообщения = "Привіт, " + ДанныеСообщения.message.chat.first_name + "!";
					Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМенюДляМастера());
				Иначе
					Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Идентификатор", ЗапросБоту.Чат);
					Если Контрагент.Пустая() Тогда
						ТекстСообщения = "Привіт, " + ДанныеСообщения.message.chat.first_name + "!" + Символы.ПС
						+ "Для початку, повідом свій номер телефону"; // + Телеграм.Эмоджи.point_down;
						Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкуТелефон());
					Иначе 
						ТекстСообщения = "Привіт, " + ДанныеСообщения.message.chat.first_name + "!" + Символы.ПС
						+ "Для запису, натисни кнопку ""Новий запис"" "; // + Телеграм.Эмоджи.point_down;
						Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМеню());
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
			
			//СессияКонтрагента = Новый Структура;
			СессияКонтрагента.Вставить("Мастер", Мастер);
			СессияКонтрагента.Вставить("ТекДата", ТекДата);
			Если (Не Контрагент = Неопределено) И (Не Контрагент.Пустая()) Тогда
				СессияКонтрагента.Вставить("Контрагент", Контрагент);	
			КонецЕсли;
			//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
			
		ИначеЕсли СокрЛП(ДанныеСообщения.message.text) = "Password" Тогда // Активация Бота кодом
			// получили код активации Бота от мастера,
			// запросим его № телефона для последующей регистрации в спр.Мастера
			СессияКонтрагента.Вставить("АктивацияБота", Истина);
			//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
			
			ПоказатьВводТелефона(ЗапросБоту);
		//ИначеЕсли СокрЛП(ДанныеСообщения.message.text) = "Календар"  Тогда
		//	ПоказатьКалендарьМастера();
		//ИначеЕсли СокрЛП(ДанныеСообщения.message.text) = "ВІЛЬНИЙ ЧАС"  Тогда
		//	ТекстСообщения = "Буде реалізовано в майбутньому.";
		//	Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
		ИначеЕсли ЭтоЧисло(СокрЛП(ДанныеСообщения.message.text)) Тогда // Телефон
			
			//ТекстСообщения = "Отримано тел.: " + СокрЛП(ДанныеСообщения.message.text);
			//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
			
			// найдем клиента в базе, если нет создадим
			Телефон = Прав(СокрЛП(ЗапросБоту.text),10);
			Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Телефон", Телефон);
			
			Если Контрагент.Пустая() Тогда
				Контрагент = СоздатьКонтрагента(ЗапросБоту, Результат, Телефон);
			КонецЕсли;
			
			//Заказ = СоздатьЗаказ(Контрагент, Результат);
			
			//// запишем сессию с данными контрагента
			//СессияКонтрагента = Новый Структура;
			//СессияКонтрагента.Вставить("Мастер", Мастер);
			//СессияКонтрагента.Вставить("ТекДата", ТекДата);
			//СессияКонтрагента.Вставить("Контрагент", Контрагент);
			////СессияКонтрагента.Вставить("Заказ", Заказ);
			//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
			
			ПоказатьВыборУслуг(ЗапросБоту);
		Иначе 
			ТекстСообщения = "Не відома команда";
			Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
		КонецЕсли;
		
	Иначе // неожидаемый тип сообщения просто пропускаем его
		Результат = Новый Структура("ok", Истина);
	КонецЕсли;
	
	#КонецОбласти
	
	Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
	
	ОбработатьРезультат(ЗапросБоту, ТекстСообщения, Результат);
	
КонецПроцедуры


#Область ОбработчикиКоманд
Процедура ПоказатьСправку(ЗапросБоту)
	
	ТекстСообщения = ПолучитьМакет("Справка").ПолучитьТекст();
	
	Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
	
КонецПроцедуры

Процедура ОставитьОтзыв(ЗапросБоту) Экспорт
	
	ТекстСообщения = "Оставьте отзыв о боте следующим сообщением и он будет направлен разработчику.";
	
	Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
	
	Если Результат.Результат Тогда
		ОтправленноеСообщение = Результат.result;	// Возвращаем ссылку на отправленное ЗапросБоту
	Иначе
		//ТекстОписания = СтрШаблон("%1
		//|Чат: %2
		//|Текст: %3", Результат.description, ЗапросБоту.Чат, ТекстСообщения);
		ТекстОписания = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку("[description]
		|Чат: [Чат]
		|Текст: [ТекстСообщения]", Новый Структура("description, Чат, ТекстСообщения",Результат["description"], ЗапросБоту.Чат, ТекстСообщения));
		ЗаписьЖурналаРегистрации("ИнфоБот", УровеньЖурналаРегистрации.Ошибка,,, ТекстОписания);
	КонецЕсли;
	
	//СессияКонтрагента = Новый Структура("Действие, ЗапросБоту", , ОтправленноеСообщение.message_id);
	СессияКонтрагента.Вставить("Действие", "Отзыв");
	СессияКонтрагента.Вставить("ЗапросБоту", ОтправленноеСообщение.message_id);
	//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
	
КонецПроцедуры

Процедура ОбработатьРезультат(ЗапросБоту, ТекстСообщения, Результат)
	
	Если НЕ Результат = Неопределено Тогда
		Если Результат["ok"] Тогда
			РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, ЗапросБоту.update_id);
		Иначе 
			//ТекстОписания = СтрШаблон("%1
			//|Чат: %2
			//|Текст: %3", Результат.description, ЗапросБоту.Чат, ТекстСообщения);
			ТекстОписания = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку("[description]
			|Чат: [Чат]
			|Текст: [ТекстСообщения]", Новый Структура("description, Чат, ТекстСообщения",Результат["description"], ЗапросБоту.Чат, ТекстСообщения));
			ЗаписьЖурналаРегистрации("Телеграм.TestZakazUslugBot", УровеньЖурналаРегистрации.Ошибка,,, ТекстОписания);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьКалендарь(ЗапросБоту, СмещениеКвоМесяцев)
	
	//Мастер = Неопределено; ТекДата = Неопределено; Заказ = Неопределено;
	//СессияКонтрагента = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	//СессияКонтрагента.Свойство("Мастер", Мастер);
	//СессияКонтрагента.Свойство("Заказ", Заказ);
	//СессияКонтрагента.Свойство("ТекДата", ТекДата);
	//Боты.УдалитьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	
	Если Мастер = Неопределено Тогда
		ЗафиксироватьОшибку(ЗапросБоту, "Майстра не знайдено! Спробуйте ще раз.");
		Возврат;
	КонецЕсли;
	
	//Заказ = НайтиЗаказ(ЗапросБоту.Чат, Результат);
	Если Заказ = Неопределено Тогда
		ЗафиксироватьОшибку(ЗапросБоту, "Не можливо вибрати час. Не знайдено замовлення!");
		Возврат;
	КонецЕсли;
	
	Если Заказ.ВремяЗаписи.Количество() = 0 Тогда
		ЗафиксироватьОшибку(ЗапросБоту, "Не можливо вибрати час. Не вибрані послуги!");
		Возврат;
	КонецЕсли;
	
	Если ТекДата = Неопределено Тогда
		ТекДата = ТекущаяДатаСеанса();
	Иначе 
		ТекДата = ДобавитьМесяц(ТекДата, СмещениеКвоМесяцев);
	КонецЕсли;
	
	ТекстСообщения = ПолучитьТекстЗаказа(Заказ, Мастер);
	ТекстСообщения = ТекстСообщения + "<b>Виберіть дату:</b>";
	//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер));
	Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиКалендарь(ТекДата, Мастер));
	
	//СессияКонтрагента = Новый Структура;
	СессияКонтрагента.Вставить("Мастер", Мастер);
	СессияКонтрагента.Вставить("Заказ", Заказ);
	СессияКонтрагента.Вставить("ТекДата", ТекДата);
	//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
	
КонецПроцедуры

Процедура ПоказатьСписокМесяцев(ЗапросБоту, КвоМесяцев)
	
	//ТекДата = Неопределено;
	//ПредыдущийСообщение = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	//ПредыдущийСообщение.Свойство("ТекДата", ТекДата);
	
	ТекстСообщения = "<b>Виберіть місяць:</b>";
	//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер));
	Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиМесяцы(ТекДата));
	
КонецПроцедуры

Процедура ПоказатьВыборУслуг(ЗапросБоту, стрОтвет = Неопределено)
	Перем мНоменклатура;
	
	НовыйЗаказ = Ложь;
	
	//Если Контрагент = Неопределено Тогда
	//	ТекстСообщения = "Не можливо створити контрагента." + Символы.ПС
	//	+"Запишіться за телефоном";
	//	ЗафиксироватьОшибку(ЗапросБоту, ТекстСообщения);
	//	Возврат;
	//КонецЕсли;
	
	Если Заказ = Неопределено Тогда //НЕ КэшКонтрагента.Свойство("Заказ", Заказ) не нашли заказ, создадим
		Заказ = СоздатьЗаказ(Контрагент, Результат);
		НовыйЗаказ = Истина;
	КонецЕсли;
	
	Если Заказ = Неопределено Тогда
		ТекстСообщения = "Не можливо створити запис." + Символы.ПС
		+"Запишіться за телефоном";
		ЗафиксироватьОшибку(ЗапросБоту, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Если Мастер = Неопределено Тогда
		ТекстСообщения = "Не можливо вибрати час. Не знайдено замовлення!";
		ЗафиксироватьОшибку(ЗапросБоту, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	мНоменклатура = Заказ.ВремяЗаписи.ВыгрузитьКолонку("Номенклатура");
	ТекстСообщения = "<b>Запис №" + Заказ.Номер + " від " + Формат(Заказ.Дата, "ДЛФ=Д") + ":</b>" + Символы.ПС;
	ТекстСообщения = ТекстСообщения + "Виберіть необхідні послуги:";
	//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер));
	Если Не НовыйЗаказ Тогда
		Если мНоменклатура.Количество() > 0 Тогда // есть выбранная номенклатура
			Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиУслуги(Мастер, мНоменклатура)); //ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер)
		Иначе //Если ПредыдущийСообщение.Свойство("ТекДата", ТекДата) Тогда
			Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиУслуги(Мастер)); //ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер)
		КонецЕсли;
	Иначе
		Если мНоменклатура.Количество() > 0 Тогда // есть выбранная номенклатура
			Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиУслуги(Мастер, мНоменклатура));
			//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,,,ПолучитьКнопкиУслуги(Мастер, мНоменклатура)); //ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер)
		Иначе //Если ПредыдущийСообщение.Свойство("ТекДата", ТекДата) Тогда
			//Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиУслуги(Мастер));
			// В диалоге мастера получили № тел. клиента
			Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения, Перечисления.ВидФорматирования.HTML,,,,ПолучитьКнопкиУслуги(Мастер)); //ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер)
		КонецЕсли;
	КонецЕсли;
	
	//СессияКонтрагента = Новый Структура;
	//Если ЗначениеЗаполнено(Мастер) Тогда
	СессияКонтрагента.Вставить("Мастер", Мастер);	
	СессияКонтрагента.Вставить("Контрагент", Контрагент);
	//КонецЕсли;
	//Если ЗначениеЗаполнено(Заказ) Тогда
	СессияКонтрагента.Вставить("Заказ", Заказ);	
	//КонецЕсли;
	//Если ЗначениеЗаполнено(Номенклатура) Тогда
	СессияКонтрагента.Вставить("Номенклатура", Номенклатура);	
	//КонецЕсли;
	//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
	
КонецПроцедуры

Процедура УдалитьЗаказ(ЗапросБоту)
	
	Если Заказ <> Неопределено Тогда //ПредыдущийСообщение.Свойство("Заказ", Заказ)
		ТекстСообщения = "<b>Ви дійсно хочете видалити запис?</b>" + Символы.ПС + 
		ПолучитьТекстЗаказа(Заказ, Мастер);
		Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиУдалитьЗаказДаНет());
	Иначе 
		Если ЭтоДиалогСМастером Тогда
			ТекстСообщения = "Привіт, " + ДанныеСообщения.callback_query.message.chat.first_name + "!";
			//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМенюДляМастера());
			Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиМенюДляМастера());
		Иначе 
			ТекстСообщения = "Привіт, " + ДанныеСообщения.callback_query.message.chat.first_name + "!" + Символы.ПС + 
			"Для запису, натисни кнопку ""Новий запис"" "; // + Телеграм.Эмоджи.point_down;
			//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМеню());
			Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиМеню());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьЗаказПослеПодтверждения(ЗапросБоту)
	
	//Заказ = Неопределено;
	//ПредыдущийСообщение = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	
	Если Заказ <> Неопределено Тогда //ПредыдущийСообщение.Свойство("Заказ", Заказ) не нашли заказ, создадим
		
		ДокЗаказ = Заказ.ПолучитьОбъект();
		
		Попытка
			ДокЗаказ.УстановитьПометкуУдаления(Истина);
		Исключение
			ЗафиксироватьОшибку(ЗапросБоту, "Помилка видалення замовлення!");
			Возврат;
		КонецПопытки;	
		
		ТекстСообщения = "<b>Видалено запис:</b>" + Символы.ПС + 
		"Запис №" + Заказ.Номер + " від " + Формат(Заказ.Дата, "ДЛФ=Д");
		
		Если ЭтоДиалогСМастером Тогда
			Клавиатура = ПолучитьКнопкиМенюДляМастера();
		Иначе 
			Клавиатура = ПолучитьКнопкиМеню();
		КонецЕсли;
		
		Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,Клавиатура);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьВремя(ЗапросБоту)
	
	ЗаписьНаДату = Сред(ДанныеСообщения.callback_query.data,15,СтрДлина(ДанныеСообщения.callback_query.data));
	
	//Мастер = Неопределено; Заказ = Неопределено;  
	//ПредыдущийСообщение = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	//ПредыдущийСообщение.Свойство("Мастер", Мастер);
	//ПредыдущийСообщение.Свойство("Заказ", Заказ);
	
	//Заказ = НайтиЗаказ(ЗапросБоту.Чат, Результат);
	Если Заказ = Неопределено Тогда
		ЗафиксироватьОшибку(ЗапросБоту, "Не можливо вибрати час. Не знайдено замовлення!");
		Возврат;
	КонецЕсли;
	
	Если Мастер = Неопределено Тогда
		ЗафиксироватьОшибку(ЗапросБоту, "Не можливо вибрати час. Не знайдено замовлення!");
		Возврат;
	КонецЕсли;
	
	//мНоменклатура = Заказ.ВремяЗаписи.ВыгрузитьКолонку("Номенклатура");
	//ТекстСообщения = "Запис на " + Формат(ЗаписьНаДату, "ДФ=дд ММММ гггг") + Символы.ПС;
	////ТекстСообщения = "Виберіть послуги, а потім дату:";
	////Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиКалендарь(ТекущаяДата(), Мастер));
	//Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,,,ПолучитьКнопкиУслуги(Мастер, мНоменклатура));	
	
	//стрДанныеЗаказа = ПолучитьДанныеЗаказа(Заказ, Мастер);
	ТекстСообщения = ПолучитьТекстНеПроведенногоЗаказа(Дата(ЗаписьНаДату), Заказ, Мастер);
	
	ДлительностьУслуг = Заказ.ВремяЗаписи.Итог("Длительность");//стрДанныеЗаказа.ДлительностьУслуг;
	
	Клавиатура = ПолучитьКнопкиВремя(ЗаписьНаДату, Мастер, ДлительностьУслуг);
	Если Клавиатура = Неопределено Тогда //нет свбодного времени
		ТекстСообщения = ТекстСообщения + "Немає вільного часу. Виберіть інший день:";
		Клавиатура = ПолучитьКнопкиВЫБРАТЬДАТУ();
	Иначе 
		ТекстСообщения = ТекстСообщения + Символы.ПС
		+"<b>Виберіть час:</b>";
	КонецЕсли;
	Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,Клавиатура);
	
	//СессияКонтрагента = Новый Структура;
	СессияКонтрагента.Вставить("Мастер", Мастер);
	СессияКонтрагента.Вставить("Заказ", Заказ);
	СессияКонтрагента.Вставить("ТекДата", ЗаписьНаДату);
	//Боты.УдалитьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
	
КонецПроцедуры

Процедура ЗаписатьВремя(ЗапросБоту)
	
	ЗаписьНаДату = Сред(ДанныеСообщения.callback_query.data,7,СтрДлина(ДанныеСообщения.callback_query.data));
	
	//Мастер = Неопределено;
	////Услуга = Неопределено;
	//КэшКонтрагента = Боты.ПрочитатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	//КэшКонтрагента.Свойство("Мастер", Мастер);
	//КэшКонтрагента.Свойство("Заказ", Заказ);
	//ПредыдущийСообщение.Свойство("Услуга", Услуга);
	
	//Заказ = НайтиЗаказ(ЗапросБоту.Чат, Результат);
	Если Заказ = Неопределено Тогда
		ЗафиксироватьОшибку(ЗапросБоту, "Замовлення не знайдено!");
		Возврат;
	КонецЕсли;
	
	ДокЗаказ = Заказ.ПолучитьОбъект();
	ДокЗаказ.ЗаписатьВремя(Мастер, ЗаписьНаДату);  //проставить время по строчкам
	Попытка
		ДокЗаказ.Записать(РежимЗаписиДокумента.Проведение);
		//ТекстСообщения = "Запис виконано!" + Символы.ПС + 
		//"Дата та час: " + Строка(ЗаписьНаДату) + Символы.ПС +
		//"Майстер: " + Мастер + Символы.ПС;
		//
		//СтруктураОтбора = Новый Структура("Мастер", Мастер);
		//МассивНайденныхСтрок = ДокЗаказ.ВремяЗаписи.НайтиСтроки(СтруктураОтбора);
		//Для каждого строкаДок Из МассивНайденныхСтрок Цикл
		//	ТекстСообщения = ТекстСообщения + "Послуги: " + строкаДок.Номенклатура + " - " + строкаДок.Номенклатура.Цена + Символы.ПС;
		//КонецЦикла;
	Исключение
		ЗафиксироватьОшибку(ЗапросБоту, "Помилка збереження запису! Звернись в підтримку за тел. (067) 260-31-07");
		Возврат;
	КонецПопытки;
	
	ТекстСообщения = ПолучитьТекстЗаказа(Заказ, Мастер);
	Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,, ПолучитьКнопкиРедактироватьЗаказ(Заказ));
	//Результат = Телеграм.deleteMessage(ЗапросБоту.Чат, ЗапросБоту.message_id);
	//Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкиМеню());
	
	//СессияКонтрагента = Новый Структура;
	СессияКонтрагента.Вставить("Мастер", Мастер);
	//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессияКонтрагента);
	//Боты.УдалитьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат);
	
КонецПроцедуры

Процедура ПоказатьЗаписиКонтрагента(ИДКонтрагента, Результат)
	
	ТекстСообщения = "<b>Ваші записи:</b>" + Символы.ПС;
	
	ОписанияЗаказов = ПолучитьОписаниеЗаказа(ИДКонтрагента, Результат);
	
	Если ОписанияЗаказов.Количество() > 0 Тогда
		Для каждого ОписаниеЗаказа Из ОписанияЗаказов Цикл
			
			Заказ = ОписаниеЗаказа.Ключ; 
			ТекстСообщения = ОписаниеЗаказа.Значение;
			
			Результат = Телеграм.sendMessage(ИДКонтрагента, ТекстСообщения, Перечисления.ВидФорматирования.HTML,,,,ПолучитьКнопкиРедактироватьЗаказ(Заказ));
			
		КонецЦикла;
	Иначе
		ТекстСообщения = ТекстСообщения + "Записи відсутні";
		Результат = Телеграм.sendMessage(ИДКонтрагента, ТекстСообщения, Перечисления.ВидФорматирования.HTML,,,,);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОповеститьМастера(ИДМастера, ТекстСообщения)
	
	Результат = Телеграм.sendMessage(ИДМастера, ТекстСообщения, Перечисления.ВидФорматирования.HTML,,,,);
	//ОбработатьРезультат(ЗапросБоту, ТекстСообщения, Результат);
	
КонецПроцедуры

Процедура ОповеститьКонтрагента(ИДКонтрагента, ТекстСообщения) Экспорт 
	
	Результат = Телеграм.sendMessage(ИДКонтрагента, ТекстСообщения, Перечисления.ВидФорматирования.HTML,,,,);
	//ОбработатьРезультат(ЗапросБоту, ТекстСообщения, Результат);
	
КонецПроцедуры

Процедура ПоказатьВводТелефона(ЗапросБоту)
	
	ТекстСообщения = "Повідом свій номер телефону, натиснувши на кнопку";
	Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,ПолучитьКнопкуТелефон());
	
КонецПроцедуры

Процедура ПоказатьЗапросТелефонаКонтрагента(ЗапросБоту)
	
	ТекстСообщения = "Введіть номер телефону клієнта, в форматі 0672603107";
	Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,,,,,);
	
КонецПроцедуры

Процедура ПоказатьЗаписиМастера()
	
	
КонецПроцедуры

Процедура ПоказатьКалендарьМастера()
	
	ТекстСообщения = "<b>Виберіть дату:</b>";
	
	Если ЗапросБоту.text = "ВЫБРАТЬДАТУ" Тогда
		Результат = Телеграм.editMessageText(ЗапросБоту.Чат, ЗапросБоту.message_id,, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,ПолучитьКнопкиКалендарь(ТекДата, Мастер));	
	Иначе
		Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения,Перечисления.ВидФорматирования.HTML,,,,ПолучитьКнопкиКалендарь(ТекДата, Мастер));
		
		//СессиКонтрагента = Новый Структура;
		//СессиКонтрагента.Вставить("ТекДата", ТекДата);
		//Боты.ЗаписатьСессиюКонтрагента(Телеграм.Бот, ЗапросБоту.Чат, СессиКонтрагента);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ГенерацияКнопок

#Область КнопкиКонтрагента
Функция ПолучитьКнопкиМеню()
	
	МассивСтрок = Новый Массив;
	
	КнопкаЗАПИСАТЬСЯ = Телеграм.InlineKeyboardButton("Новий запис", ,"ЗАПИСАТЬСЯ");
	КнопкаМОИЗАПИСИ = Телеграм.InlineKeyboardButton("Мої записи", ,"МОИЗАПИСИ");
	СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаЗАПИСАТЬСЯ, КнопкаМОИЗАПИСИ);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
	//КнопкаЗАПИСАТЬСЯ = Телеграм.KeyboardButton("Новий запис");
	//КнопкаМОИЗАПИСИ = Телеграм.KeyboardButton("Мої записи");
	//
	//СтрокаКнопок1 = Телеграм.ReplyKeyboardMarkup_add(КнопкаЗАПИСАТЬСЯ,КнопкаМОИЗАПИСИ);
	//Телеграм.ReplyKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	//ReplyKeyboard = Телеграм.ReplyKeyboardMarkup(МассивСтрок);
	//
	//Возврат ReplyKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиМастера(Бот)
	
	МассивСтрок = Новый Массив;
	
	ВыборкаМастера = ПолучитьМастеров(Бот);
	
	Пока ВыборкаМастера.Следующий() Цикл
		Если ДобавитьВариантОтвета(ВыборкаМастера.Мастер.УникальныйИдентификатор(), "СсылкаМастер", ВыборкаМастера.Мастер) Тогда
			КнопкаМастер = Телеграм.InlineKeyboardButton(СокрЛП(ВыборкаМастера.Мастер) + "(" + СокрЛП(ВыборкаМастера.МастерСпециальность) + ")", , ВыборкаМастера.Мастер.УникальныйИдентификатор); //"МАСТЕР_" + СокрЛП(ВыборкаМастера.Мастер)
			СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаМастер);
			Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);	
		КонецЕсли;
	КонецЦикла;
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиУслуги(Мастер, мУслуг = Неопределено)
	
	МассивСтрок = Новый Массив;
	
	ВыборкаУслугиМастера = ПолучитьУслугиМастера(Мастер);
	
	Пока ВыборкаУслугиМастера.Следующий() Цикл
		Если ДобавитьВариантОтвета(ВыборкаУслугиМастера.Ссылка.УникальныйИдентификатор(), "СсылкаНоменклатура", ВыборкаУслугиМастера.Ссылка) Тогда
			ТекстКнопки = СокрЛП(ВыборкаУслугиМастера.Наименование) + " - " + СокрЛП(ВыборкаУслугиМастера.Цена);
			Если (НЕ мУслуг = Неопределено) Тогда
				Если (мУслуг.Количество() > 0) Тогда
					Если НЕ мУслуг.Найти(ВыборкаУслугиМастера.Ссылка) = Неопределено Тогда
						// добавим отметку выбранной услуги
						ТекстКнопки = Строка(Телеграм.Эмоджи.heavy_check_mark) + " " + ТекстКнопки;	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			КнопкаМастер = Телеграм.InlineKeyboardButton(ТекстКнопки, ,Строка(ВыборкаУслугиМастера.Ссылка.УникальныйИдентификатор())); //"УСЛУГА_" + СокрЛП(ВыборкаУслугиМастера.Наименование)
			СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаМастер);
			Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
			
		КонецЕсли;
	КонецЦикла;
	ТекстКнопки = Строка(Телеграм.Эмоджи.date) + " " + "Вибрати дату";
	КнопкаВыбратьДату = Телеграм.InlineKeyboardButton(ТекстКнопки,, "ВЫБРАТЬДАТУ");
	СтрокаКнопок2 = Телеграм.InlineKeyboardMarkup_add(КнопкаВыбратьДату);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок2);
	
	ТекстКнопки = Строка(Телеграм.Эмоджи.x) + " Видалити запис " + Строка(Телеграм.Эмоджи.arrow_up);
	КнопкаУдалитьЗаказ = Телеграм.InlineKeyboardButton(ТекстКнопки, , "УДАЛИТЬЗАКАЗ");
	СтрокаКнопок3 = Телеграм.InlineKeyboardMarkup_add(КнопкаУдалитьЗаказ);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок3);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиКалендарь(ТекДата, Мастер)
	
	//Если ТекДата = Неопределено Тогда
	//	ТекДата = ТекущаяДатаСеанса();
	//КонецЕсли;
	
	МассивСтрок = Новый Массив;
	
	// первая строка - Месяц и Год
	КнопкаНазад = Телеграм.InlineKeyboardButton("<", , "ПРЕДЫДУЩИЙМЕСЯЦ");
	КнопкаВперед = Телеграм.InlineKeyboardButton(">", , "СЛЕДУЮЩИЙМЕСЯЦ");
	КнопкаМесяцГод = Телеграм.InlineKeyboardButton(Формат(ТекДата,"Л=uk_UA;ДФ=ММММ.гггг"), ,"ВЫБОРМЕСЯЦА");
	СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаНазад, КнопкаМесяцГод, КнопкаВперед);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	
	// вторая строка - Дни Недели
	мДниНедели = Новый Массив;
	мДниНедели.Добавить("Пн");
	мДниНедели.Добавить("Вт");
	мДниНедели.Добавить("Ср");
	мДниНедели.Добавить("Чт");
	мДниНедели.Добавить("Пт");
	мДниНедели.Добавить("Сб");
	мДниНедели.Добавить("Нд");
	
	СтрокаКнопок2 = Новый Массив;
	Для каждого ДеньНедели Из мДниНедели Цикл
		КнопкаДень = Телеграм.InlineKeyboardButton(ДеньНедели, ,"ИГНОР");
		СтрокаКнопок2.Добавить(КнопкаДень);
	КонецЦикла;
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок2);
	
	// дни календаря
	МассивНедель = ПолучитьКалендарьМастераНаМесяц(Год(ТекДата), Месяц(ТекДата), Мастер);
	
	Для каждого МассивДней Из МассивНедель Цикл
		СтрокаКнопокНеделя = Новый Массив;
		Для каждого День Из МассивДней Цикл
			Если День = 0 Тогда
				КнопкаДень = Телеграм.InlineKeyboardButton(" ", , "ИГНОР");
			Иначе 
				КнопкаДень = Телеграм.InlineKeyboardButton(День(День), , "ДЕНЬКАЛЕНДАРЯ_"+Строка(День));
			КонецЕсли;
			СтрокаКнопокНеделя.Добавить(КнопкаДень);
		КонецЦикла;
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопокНеделя);
	КонецЦикла;
	
	// подвал календаря
	ТекстКнопки = Строка(Телеграм.Эмоджи.nail_care) + " Вибір послуг";
	КнопкаВыборУслуг = Телеграм.InlineKeyboardButton(ТекстКнопки, , "ВЫБОРУСЛУГ");
	
	СтрокаКнопокВпередНазад = Телеграм.InlineKeyboardMarkup_add(КнопкаВыборУслуг);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопокВпередНазад);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиМесяцы(ТекДата)
	
	МассивСтрок = Новый Массив;
	ИсходныйМесяц = Месяц(ТекДата);
	ТекДата = НачалоГода(ТекДата);
	
	Для Ряд = 1 По 4 Цикл
		
		СтрокаКнопокСезона = Новый Массив;
		
		Для Колонка = 1 По 3 Цикл
			
			КнопкаМесяцСезона = Телеграм.InlineKeyboardButton(Формат(ТекДата,"Л=uk_UA;ДФ=ММММ.гггг"), , "МЕСЯЦ_"+((ИсходныйМесяц - Месяц(ТекДата))*-1));
			СтрокаКнопокСезона.Добавить(КнопкаМесяцСезона);
			ТекДата = ДобавитьМесяц(ТекДата,1)
			
		КонецЦикла;
		
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопокСезона);	
		
	КонецЦикла;
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиВремя(ТекДата, Мастер, ДлительностьУслуг)
	
	КвоНужноЗаписей = ДлительностьУслуг/Мастер.ШагЗаписи;
	КвоОстатокЗаписей = 0;
	
	МассивСтрок = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеДниМастеров.ДатаВремяЗаписи КАК ВремяЗаписи,
	|	ЗаписиНаПрием.Номенклатура КАК Номенклатура,
	|	ЗаписиНаПрием.Контрагент КАК Контрагент
	|ИЗ
	|	РегистрСведений.РабочиеДниМастеров КАК РабочиеДниМастеров
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиНаПрием КАК ЗаписиНаПрием
	|		ПО РабочиеДниМастеров.Мастер = ЗаписиНаПрием.Мастер
	|			И РабочиеДниМастеров.ДатаВремяЗаписи = ЗаписиНаПрием.ДатаВремяЗаписи
	|ГДЕ
	|	РабочиеДниМастеров.Мастер = &Мастер
	|	И РабочиеДниМастеров.ДатаВремяЗаписи МЕЖДУ &НачДня И &КонДня
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВремяЗаписи УБЫВ";
	//|	И ЗаписиНаПрием.Номекнлатура <> НЕОПРЕДЕЛЕНО";
	
	Запрос.УстановитьПараметр("Мастер", Мастер);
	Запрос.УстановитьПараметр("НачДня", НачалоДня(ТекДата));
	Запрос.УстановитьПараметр("КонДня", КонецДня(ТекДата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	тзЗаписей = РезультатЗапроса.Выгрузить();
	тзЗаписей.Колонки.Добавить("Выводить");
	
	Для каждого строкаТз Из тзЗаписей Цикл
		Если строкаТз.ВремяЗаписи < ТекущаяДатаСеанса() Тогда
			строкаТз.Выводить = Ложь;
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(строкаТз.Номенклатура) Тогда
			строкаТз.Выводить = Ложь;
			КвоОстатокЗаписей = 0;
			Продолжить;
		КонецЕсли;
		КвоОстатокЗаписей = КвоОстатокЗаписей + 1;
		Если КвоОстатокЗаписей >= КвоНужноЗаписей Тогда
			строкаТз.Выводить = Истина;
		Иначе 
			строкаТз.Выводить = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	тзЗаписей.Сортировать("ВремяЗаписи");
	Н = 1;
	СтрокаКнопок = Новый Массив;
	ЕстьСвободноеВремя = Ложь;
	Для каждого сЗапись Из тзЗаписей Цикл
		
		Если сЗапись.Выводить Тогда
			ТекстКнопки = Формат(сЗапись.ВремяЗаписи,"Л=uk_UA;ДФ=ЧЧ:мм");
			КнопкаВремя = Телеграм.InlineKeyboardButton(ТекстКнопки, ,"ВРЕМЯ_" + сЗапись.ВремяЗаписи);
			ЕстьСвободноеВремя = Истина;
		Иначе  // время занято
			КнопкаВремя = Телеграм.InlineKeyboardButton(" ", ,"ИГНОР");
		КонецЕсли;
		
		СтрокаКнопок.Добавить(КнопкаВремя);
		Н = Н + 1;
		
		Если Н > 4 Тогда  // 4 кнопки в ряд
			Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
			СтрокаКнопок = Новый Массив;
			Н = 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтрокаКнопок.Количество() > 0 Тогда
		Пока Н < 5 Цикл
			КнопкаВремя = Телеграм.InlineKeyboardButton(" ", ,"ИГНОР");
			СтрокаКнопок.Добавить(КнопкаВремя);
			Н = Н + 1;
		КонецЦикла; 
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
	КонецЕсли;
	
	ТекстКнопки = Строка(Телеграм.Эмоджи.date) + " Інший день";
	КнопкаДругойДень = Телеграм.InlineKeyboardButton(ТекстКнопки, ,"ВЫБРАТЬДАТУ");
	ТекстКнопки = Строка(Телеграм.Эмоджи.nail_care) + " Вибір послуг";
	КнопкаВыборУслуг = Телеграм.InlineKeyboardButton(ТекстКнопки, , "ВЫБОРУСЛУГ");
	СтрокаКнопок= Телеграм.InlineKeyboardMarkup_add(КнопкаДругойДень, КнопкаВыборУслуг);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Если ЕстьСвободноеВремя Тогда
		Возврат InlineKeyboard;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКнопкиВЫБРАТЬДАТУ()
	
	МассивСтрок = Новый Массив;
	СтрокаКнопок = Новый Массив;
	КнопкаДругойДень = Телеграм.InlineKeyboardButton("Інший день", ,"ВЫБРАТЬДАТУ");
	СтрокаКнопок.Добавить(КнопкаДругойДень);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиРедактироватьЗаказ(Заказ)
	
	МассивСтрок = Новый Массив;
	
	Если ДобавитьВариантОтвета(Заказ.Ссылка.УникальныйИдентификатор(), "СсылкаЗаказ", Заказ.Ссылка) Тогда
		ТекстКнопки = Строка(Телеграм.Эмоджи.memo) + " Редагувати запис " + Строка(Телеграм.Эмоджи.arrow_up);
		КнопкаРедактироватьЗаказ = Телеграм.InlineKeyboardButton(ТекстКнопки, ,Строка(Заказ.Ссылка.УникальныйИдентификатор()));
	КонецЕсли;
	
	СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаРедактироватьЗаказ);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	
	Если ЭтоДиалогСМастером Тогда
		КнопкаКалендарь = Телеграм.InlineKeyboardButton("Календар", ,"КАЛЕНДАРЬ");
		КнопкаСвободноеВремя = Телеграм.InlineKeyboardButton("Вільний час", ,"СВОБОДНОЕВРЕМЯ");
		СтрокаКнопок2 = Телеграм.InlineKeyboardMarkup_add(КнопкаКалендарь,КнопкаСвободноеВремя);
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок2);
		
		КнопкаЗАПИСАТЬСЯ = Телеграм.InlineKeyboardButton("Новий запис", ,"ЗАПИСАТЬСЯ");
		СтрокаКнопок3 = Телеграм.InlineKeyboardMarkup_add(КнопкаЗАПИСАТЬСЯ);
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок3);
	Иначе 
		КнопкаЗАПИСАТЬСЯ = Телеграм.InlineKeyboardButton("Новий запис", ,"ЗАПИСАТЬСЯ");
		КнопкаМОИЗАПИСИ = Телеграм.InlineKeyboardButton("Мої записи", ,"МОИЗАПИСИ");
		СтрокаКнопок2 = Телеграм.InlineKeyboardMarkup_add(КнопкаЗАПИСАТЬСЯ, КнопкаМОИЗАПИСИ);
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок2);	
	КонецЕсли;
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции

Функция ПолучитьКнопкуТелефон()
	
	МассивСтрок = Новый Массив;
	
	Кнопка = Телеграм.KeyboardButton("Повідомити номер телефону",Истина);
	
	Строка = Телеграм.ReplyKeyboardMarkup_add(Кнопка);
	Телеграм.ReplyKeyboardMarkup_row(МассивСтрок, Строка);
	
	ReplyKeyboard = Телеграм.ReplyKeyboardMarkup(МассивСтрок);
	
	Возврат ReplyKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиУдалитьЗаказДаНет()
	
	МассивСтрок = Новый Массив;	
	
	КнопкаУдалитьЗаказДа = Телеграм.InlineKeyboardButton(Строка(Телеграм.Эмоджи.whiteheavycheckmark) + " Так", ,"УДАЛИТЬЗАКАЗДА");
	
	Если ДобавитьВариантОтвета(Заказ.Ссылка.УникальныйИдентификатор(), "СсылкаЗаказ", Заказ.Ссылка) Тогда
		КнопкаУдалитьЗаказНет = Телеграм.InlineKeyboardButton(Строка(Телеграм.Эмоджи.negative_squared_cross_mark) + " Ні", ,Строка(Заказ.Ссылка.УникальныйИдентификатор()));	
	КонецЕсли;
	
	СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаУдалитьЗаказДа, КнопкаУдалитьЗаказНет);
	
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
КонецФункции
#КонецОбласти

#Область КнопкиМастера
Функция ПолучитьКнопкиМенюДляМастера()
	
	МассивСтрок = Новый Массив;
	
	КнопкаКалендарь = Телеграм.InlineKeyboardButton("Календар", ,"КАЛЕНДАРЬ");
	КнопкаСвободноеВремя = Телеграм.InlineKeyboardButton("Вільний час", ,"СВОБОДНОЕВРЕМЯ");
	
	СтрокаКнопок1 = Телеграм.InlineKeyboardMarkup_add(КнопкаКалендарь,КнопкаСвободноеВремя);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	
	КнопкаЗАПИСАТЬСЯ = Телеграм.InlineKeyboardButton("Новий запис", ,"ЗАПИСАТЬСЯ");
	СтрокаКнопок2 = Телеграм.InlineKeyboardMarkup_add(КнопкаЗАПИСАТЬСЯ);
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок2);
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Возврат InlineKeyboard;
	
	//КнопкаКалендарь = Телеграм.KeyboardButton("Календар");
	//КнопкаСвободноеВремя = Телеграм.KeyboardButton("Вільний час");
	//
	//СтрокаКнопок1 = Телеграм.ReplyKeyboardMarkup_add(КнопкаКалендарь,КнопкаСвободноеВремя);
	//Телеграм.ReplyKeyboardMarkup_row(МассивСтрок,СтрокаКнопок1);
	//
	//КнопкаЗАПИСАТЬСЯ = Телеграм.KeyboardButton("Новий запис");
	//СтрокаКнопок2 = Телеграм.ReplyKeyboardMarkup_add(КнопкаЗАПИСАТЬСЯ);
	//Телеграм.ReplyKeyboardMarkup_row(МассивСтрок,СтрокаКнопок2);
	//
	//ReplyKeyboard = Телеграм.ReplyKeyboardMarkup(МассивСтрок);
	//
	//Возврат ReplyKeyboard;
	
КонецФункции

Функция ПолучитьКнопкиВремяМастера(НаДату)
	
	//КвоНужноЗаписей = ДлительностьУслуг/Мастер.ШагЗаписи;
	//КвоОстатокЗаписей = 0;
	
	МассивСтрок = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеДниМастеров.ДатаВремяЗаписи КАК ВремяЗаписи,
	|	ЗаписиНаПрием.Номенклатура КАК Номенклатура,
	|	ЗаписиНаПрием.Контрагент КАК Контрагент,
	|	ЗаписиНаПрием.Регистратор.Ссылка КАК ЗаказСсылка
	|ИЗ
	|	РегистрСведений.РабочиеДниМастеров КАК РабочиеДниМастеров
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиНаПрием КАК ЗаписиНаПрием
	|		ПО РабочиеДниМастеров.Мастер = ЗаписиНаПрием.Мастер
	|			И РабочиеДниМастеров.ДатаВремяЗаписи = ЗаписиНаПрием.ДатаВремяЗаписи
	|ГДЕ
	|	РабочиеДниМастеров.Мастер = &Мастер
	|	И РабочиеДниМастеров.ДатаВремяЗаписи МЕЖДУ &НачДня И &КонДня
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВремяЗаписи УБЫВ";
	//|	И ЗаписиНаПрием.Номекнлатура <> НЕОПРЕДЕЛЕНО";
	
	Запрос.УстановитьПараметр("Мастер", Мастер);
	Запрос.УстановитьПараметр("НачДня", НачалоДня(НаДату));
	Запрос.УстановитьПараметр("КонДня", КонецДня(НаДату));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	тзЗаписей = РезультатЗапроса.Выгрузить();
	тзЗаписей.Колонки.Добавить("Выводить");
	
	Для каждого строкаТз Из тзЗаписей Цикл
		Если строкаТз.ВремяЗаписи < ТекущаяДатаСеанса() Тогда
			строкаТз.Выводить = Ложь;
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(строкаТз.Номекнлатура) Тогда
			строкаТз.Выводить = Ложь;
			КвоОстатокЗаписей = 0;
			Продолжить;
		КонецЕсли;
		//КвоОстатокЗаписей = КвоОстатокЗаписей + 1;
		//Если КвоОстатокЗаписей >= КвоНужноЗаписей Тогда
		//	строкаТз.Выводить = Истина;
		//Иначе 
		//	строкаТз.Выводить = Ложь;
		//КонецЕсли;
		строкаТз.Выводить = Истина;
	КонецЦикла;
	
	тзЗаписей.Сортировать("ВремяЗаписи");
	ЕстьСвободноеВремя = Ложь;
	
	Для каждого сЗапись Из тзЗаписей Цикл
		
		СтрокаКнопок = Новый Массив;
		
		Если сЗапись.Выводить Тогда
			ТекстКнопки = Формат(сЗапись.ВремяЗаписи,"Л=uk_UA;ДФ=ЧЧ:мм");
			КнопкаВремя = Телеграм.InlineKeyboardButton(ТекстКнопки, ,"ВРЕМЯ_" + сЗапись.ВремяЗаписи);
			ЕстьСвободноеВремя = Истина;
		Иначе  // время занято, выведем ссылку на заказ
			Если ДобавитьВариантОтвета(сЗапись.ЗаказСсылка.УникальныйИдентификатор(), "СсылкаЗаказ", сЗапись.ЗаказСсылка) Тогда
				ТекстКнопки = Строка(Телеграм.Эмоджи.memo) + Формат(сЗапись.ВремяЗаписи,"Л=uk_UA;ДФ=ЧЧ:мм") + " " + СокрЛП(сЗапись.Контрагент) + " " + СокрЛП(сЗапись.Номекнлатура);
				КнопкаВремя = Телеграм.InlineKeyboardButton(ТекстКнопки, ,Строка(сЗапись.ЗаказСсылка.УникальныйИдентификатор()));
			КонецЕсли;
		КонецЕсли;
		
		СтрокаКнопок.Добавить(КнопкаВремя);
		Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
		
	КонецЦикла;
	
	
	ТекстКнопки = Строка(Телеграм.Эмоджи.date) + " Інший день";
	КнопкаДругойДень = Телеграм.InlineKeyboardButton(ТекстКнопки, ,"ВЫБРАТЬДАТУ");
	//ТекстКнопки = Строка(Телеграм.Эмоджи.nail_care) + " Вибір послуг";
	//КнопкаВыборУслуг = Телеграм.InlineKeyboardButton(ТекстКнопки, , "ВЫБОРУСЛУГ");
	СтрокаКнопок= Телеграм.InlineKeyboardMarkup_add(КнопкаДругойДень); //КнопкаВыборУслуг
	Телеграм.InlineKeyboardMarkup_row(МассивСтрок,СтрокаКнопок);
	
	InlineKeyboard = Телеграм.InlineKeyboardMarkup(МассивСтрок);
	
	Если ЕстьСвободноеВремя Тогда
		Возврат InlineKeyboard;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьКалендарьМастераНаМесяц(Год, Месяц, Мастер)
	
	МассивНедель = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеДниМастеров.НомерНедели КАК НомерНедели,
	|	НАЧАЛОПЕРИОДА(РабочиеДниМастеров.ДатаВремяЗаписи, ДЕНЬ) КАК ДеньВремяЗаписи,
	|	РабочиеДниМастеров.ДатаВремяЗаписи КАК ДатаВремяЗаписи,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЗаписиНаПрием.Контрагент, 1) ССЫЛКА Справочник.Контрагенты
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ЕстьКонтрагент,
	|	РабочиеДниМастеров.Рабочий КАК Рабочий
	|ИЗ
	|	РегистрСведений.РабочиеДниМастеров КАК РабочиеДниМастеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиНаПрием КАК ЗаписиНаПрием
	|		ПО РабочиеДниМастеров.Мастер = ЗаписиНаПрием.Мастер
	|			И РабочиеДниМастеров.ДатаВремяЗаписи = ЗаписиНаПрием.ДатаВремяЗаписи
	|ГДЕ
	|	РабочиеДниМастеров.Мастер = &Мастер
	|	И РабочиеДниМастеров.НомерНедели МЕЖДУ &НеделяНачало И &НеделяОкончание
	|ИТОГИ
	|	СУММА(ЕстьКонтрагент),
	|	КОЛИЧЕСТВО(Рабочий)
	|ПО
	|	НомерНедели,
	|	ДеньВремяЗаписи";
	
	Запрос.УстановитьПараметр("Мастер", Мастер);
	Запрос.УстановитьПараметр("НеделяНачало", НеделяГода(НачалоМесяца(Дата(Год, Месяц,1,0,0,0))));
	Запрос.УстановитьПараметр("НеделяОкончание", НеделяГода(КонецМесяца(Дата(Год, Месяц,1,0,0,0))));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНедели = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерНедели");
	ДатаДень = ""; ДатаДеньПрошлогоМесяца = "";
	Пока ВыборкаНедели.Следующий() Цикл
		МассивДней = Новый Массив;
		ВыборкаДни = ВыборкаНедели.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДеньВремяЗаписи");
		
		//если это первая неделя года, нужно учесть дни из последней недели предыдущего года
		Если ВыборкаНедели.НомерНедели = 1 Тогда
			ДниПредыдущегоГода = ДеньНедели(НачалоМесяца(Дата(Год, Месяц,1,0,0,0))) - 1;
			Для Д = 1 По ДниПредыдущегоГода Цикл
				МассивДней.Добавить(0);
			КонецЦикла;	
		КонецЕсли;
		
		Пока ВыборкаДни.Следующий() Цикл
			Если Месяц(ВыборкаДни.ДеньВремяЗаписи) <> Месяц Тогда
				Если ДатаДеньПрошлогоМесяца <> День(ВыборкаДни.ДеньВремяЗаписи) Тогда
					МассивДней.Добавить(0);	
					ДатаДеньПрошлогоМесяца = День(ВыборкаДни.ДеньВремяЗаписи);
				КонецЕсли;
			ИначеЕсли ТекущаяДатаСеанса() > ВыборкаДни.ДеньВремяЗаписи Тогда 	
				МассивДней.Добавить(0);
			ИначеЕсли ВыборкаДни.Рабочий = 1 Тогда //Выходной
				МассивДней.Добавить(0);
			Иначе
				//Если ДатаДень <> День(ВыборкаДни.ДатаВремяЗаписи) Тогда
				// проверить есть ли свободное время
				Если ВыборкаДни.ЕстьКонтрагент = 0 Тогда
					МассивДней.Добавить(0);
				Иначе 
					МассивДней.Добавить(Строка(ВыборкаДни.ДеньВремяЗаписи));
				КонецЕсли;
				//ДатаДень =  День(ВыборкаДни.ДатаВремяЗаписи);
				//КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		
		//если это последняя неделя года, нужно учесть дни из первой недели следующего года
		Если ВыборкаНедели.НомерНедели = 53 Тогда
			ДниСледующегоГода = 7 - ДеньНедели(КонецМесяца(Дата(Год, Месяц,1,0,0,0)));
			Для Д = 1 По ДниСледующегоГода Цикл
				МассивДней.Добавить(0);
			КонецЦикла;	
		КонецЕсли;
		
		МассивНедель.Добавить(МассивДней);
		
	КонецЦикла;
	
	Возврат МассивНедель;
	
КонецФункции

Функция ПолучитьКалендарьНаМесяц(Год, Месяц)
	
	МасивНедель = Новый Массив;
	
	Для Н = НеделяГода(НачалоМесяца(Дата(Год, Месяц,1,0,0,0))) По НеделяГода(КонецМесяца(Дата(Год, Месяц,1,0,0,0))) Цикл
		
		МассивДней = Новый Массив;
		
		ТекДата = НачалоГода(Дата(Год, Месяц,1,0,0,0)) + (Н-1)*7*24*60*60;
		
		Для Д = 0 По 6 Цикл
			Если Месяц(ТекДата) <> Месяц Тогда
				МассивДней.Добавить(0);
			Иначе 
				МассивДней.Добавить(День(ТекДата));
			КонецЕсли;
			ТекДата = ТекДата + 86400;
		КонецЦикла;
		
		МасивНедель.Добавить(МассивДней);
	КонецЦикла;
	
	Возврат МасивНедель;
	
КонецФункции

Функция ПолучитьУслугиМастера(Мастер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураМастеров.Наименование КАК Наименование,
	|	НоменклатураМастеров.Цена КАК Цена,
	|	НоменклатураМастеров.Длительность КАК Длительность,
	|	НоменклатураМастеров.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НоменклатураМастеров КАК НоменклатураМастеров
	|ГДЕ
	|	НоменклатураМастеров.ПометкаУдаления = ЛОЖЬ
	|	И НоменклатураМастеров.Владелец = &Мастер";
	
	Запрос.УстановитьПараметр("Мастер", Мастер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

Функция НайтиОтвет(Идентификатор)
	
	мОтветов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВариантыОтветов.Значение КАК Значение
	|ИЗ
	|	РегистрСведений.ВариантыОтветов КАК ВариантыОтветов
	|ГДЕ
	|	ВариантыОтветов.Идентификатор = &Идентификатор";
	
	Запрос.УстановитьПараметр("Идентификатор", Новый УникальныйИдентификатор(Идентификатор));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		мОтветов.Добавить(ЗначениеИзСтрокиВнутр(ВыборкаДетальныеЗаписи.Значение));
	КонецЦикла;
	
	Возврат мОтветов;
	
КонецФункции

Функция ДобавитьВариантОтвета(Идентификатор, Операция, Значение)
	
	УдачнаяЗапись = Истина;
	
	регВариантыОтветов = РегистрыСведений.ВариантыОтветов.СоздатьМенеджерЗаписи();
	регВариантыОтветов.Идентификатор = Идентификатор;
	регВариантыОтветов.Прочитать();
	
	регВариантыОтветов.Идентификатор = Идентификатор;
	регВариантыОтветов.Значение = ЗначениеВСтрокуВнутр(Новый Структура("Операция, Значение",Операция, Значение));
	регВариантыОтветов.ДатаСоздания = ТекущаяДатаСеанса();
	Попытка
		регВариантыОтветов.Записать();
	Исключение
		ЗаписьЖурналаРегистрации("Телеграм.ЗаписьВариантаОтвета", УровеньЖурналаРегистрации.Ошибка,регВариантыОтветов,,ОписаниеОшибки());
		УдачнаяЗапись = Ложь;
	КонецПопытки;
	
	Возврат УдачнаяЗапись;
	
КонецФункции

Функция СоздатьКонтрагента(ЗапросБоту, Результат, Телефон = Неопределено)
	
	КонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
	//КонтрагентОбъект.Заполнить(ЗапросБоту);
	КонтрагентОбъект.Телефон = Телефон;
	Если Не ЭтоДиалогСМастером Тогда
		КонтрагентОбъект.Идентификатор = ЗапросБоту.Чат;
		КонтрагентОбъект.ТелеграмИмя =  ЗапросБоту.first_name;
		КонтрагентОбъект.Наименование = ЗапросБоту.first_name;
	КонецЕсли;
	
	Попытка
		КонтрагентОбъект.Записать();
		Контрагент = КонтрагентОбъект.Ссылка;
	Исключение
		Контрагент = Неопределено;
		ЗаписьЖурналаРегистрации("Телеграм.СоздатьКонтрагента",УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Контрагент;
	
КонецФункции

Функция СоздатьЗаказ(Контрагент, Результат)
	
	ЗаказОбъект = Документы.ЗаписьНаПрием.СоздатьДокумент();
	ЗаказОбъект.Заполнить(Контрагент);
	Попытка
		ЗаказОбъект.Записать();
		Заказ = ЗаказОбъект.Ссылка;
	Исключение
		Заказ = Неопределено;
		ЗаписьЖурналаРегистрации("Телеграм.СоздатьЗаказ",УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Заказ;
	
КонецФункции

Функция ПолучитьТекстНеПроведенногоЗаказа(ЗаписьНаДату, Заказ, Мастер = Неопределено)
	
	ТекстСообщения = "";
	мСтрок = Новый Массив;
	
	мСтрок.Добавить("<b>Запис на " + Формат(ЗаписьНаДату, "ДЛФ=Д") + ":</b>");
	мСтрок.Добавить("Клієнт: " + Заказ.Контрагент + " (" + Заказ.Контрагент.Телефон + ")");
	Если Не Мастер = Неопределено Тогда
		мСтрок.Добавить("Майстер: " + Мастер);	
	КонецЕсли;
	
	ВсегоСумма = 0;
	Если Не Мастер = Неопределено Тогда
		стрОтбора = Новый Структура("Мастер", Мастер);
		ЗаписиПоМастеру = Заказ.ВремяЗаписи.НайтиСтроки(стрОтбора);
	Иначе 
		ЗаписиПоМастеру = Заказ.ВремяЗаписи;
	КонецЕсли;
	
	Для каждого строкаЗаказа Из ЗаписиПоМастеру Цикл
		мСтрок.Добавить(Формат(строкаЗаказа.ДатаВремяЗаписи, "ДЛФ=В") + " - " + строкаЗаказа.Номенклатура + " - " + строкаЗаказа.Цена);
		ВсегоСумма = ВсегоСумма + строкаЗаказа.Цена;
	КонецЦикла;
	
	мСтрок.Добавить("Всього до сплати: " + ВсегоСумма);
	ТекстСообщения = СтрСоединить(мСтрок, Символы.ПС);
	
	Возврат ТекстСообщения;
	
КонецФункции

Функция ПолучитьТекстЗаказа(Заказ, Мастер)
	
	ТекстСообщения = "";
	мСтрок = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиНаПрием.Регистратор.Ссылка КАК Заказ,
	|	ЗаписиНаПрием.Регистратор.Дата КАК Дата,
	|	ЗаписиНаПрием.Регистратор.Номер КАК Номер,
	|	ЗаписиНаПрием.Мастер КАК Мастер,
	|	ЗаписиНаПрием.Контрагент КАК Контрагент,
	|	ЗаписиНаПрием.Контрагент.Телефон КАК Телефон,
	|	ЗаписиНаПрием.ДатаВремяЗаписи КАК ДатаВремяЗаписи,
	|	ЗаписиНаПрием.Номенклатура КАК Номенклатура,
	|	ЗаписиНаПрием.Номенклатура.Цена КАК Цена,
	|	ВЫРАЗИТЬ(ЗаписиНаПрием.Контрагент.Наименование КАК СТРОКА) КАК КонтрагентНаименование
	|ИЗ
	|	РегистрСведений.ЗаписиНаПрием КАК ЗаписиНаПрием
	|ГДЕ
	|	ЗаписиНаПрием.Регистратор = &Регистратор
	|	И &УсловиеМастер
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВремяЗаписи
	|ИТОГИ
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Телефон)
	|ПО
	|	Мастер,
	|	Заказ";
	
	Если Мастер <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеМастер", "ЗаписиНаПрием.Мастер = &Мастер");	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Регистратор", Заказ);
	Запрос.УстановитьПараметр("Мастер", Мастер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТекстСообщения;
	КонецЕсли;
	
	ВыборкаМастер = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Мастер"); //ОбходРезультатаЗапроса.ПоГруппировкам, "Мастер"
	
	Пока ВыборкаМастер.Следующий() Цикл
		
		Мастер = ВыборкаМастер.Мастер; 
		
		ВыборкаЗаказ = ВыборкаМастер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Заказ");
		
		Пока ВыборкаЗаказ.Следующий() Цикл
			
			мСтрок.Добавить("<b>Запис №" + ВыборкаЗаказ.Номер + " від " + Формат(ВыборкаЗаказ.Дата, "ДЛФ=Д") + ":</b>");
			мСтрок.Добавить("Клієнт: " + ВыборкаЗаказ.КонтрагентНаименование + " (" + ВыборкаЗаказ.Телефон + ")");
			мСтрок.Добавить("Майстер: " + Мастер);
			
			ВсегоСумма = 0;
			
			ВыборкаДетальныеЗаписи = ВыборкаЗаказ.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				мСтрок.Добавить(Формат(ВыборкаДетальныеЗаписи.ДатаВремяЗаписи, "ДЛФ=В") + " - " + ВыборкаДетальныеЗаписи.Номенклатура + " - " + ВыборкаДетальныеЗаписи.Цена);
				ВсегоСумма = ВсегоСумма + ВыборкаДетальныеЗаписи.Цена;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	мСтрок.Добавить("Всього до сплати: " + ВсегоСумма);
	ТекстСообщения = СтрСоединить(мСтрок, Символы.ПС);
	
	Возврат ТекстСообщения;
	
КонецФункции

// Описание: Возвращает Соответствие ДокументСсылка.ЗаписьНаПрием и ТекстовоеПредставление Заказа
//
// Параметры (название, тип, дифференцированное значение)
// 			ИДКонтрагента - Идентификатор Телеграм Контрагента
// 			Результат - Структура ответа сервера Телеграм 
Функция ПолучитьОписаниеЗаказа(ИДКонтрагента, Результат)
	
	ОписаниеЗаказа = Новый Соответствие;
	ТекстСообщения = "";
	мСтрок = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиНаПрием.Регистратор КАК Заказ,
	|	ЗаписиНаПрием.Номенклатура КАК Номенклатура,
	|	ЗаписиНаПрием.Номенклатура.Цена КАК Цена,
	|	ЗаписиНаПрием.ДатаВремяЗаписи КАК ДатаВремяЗаписи,
	|	НАЧАЛОПЕРИОДА(ЗаписиНаПрием.ДатаВремяЗаписи, ДЕНЬ) КАК ДатаЗаписи,
	|	ЗаписиНаПрием.Регистратор.Номер КАК РегистраторНомер,
	|	ЗаписиНаПрием.Регистратор.Дата КАК РегистраторДата,
	|	ЗаписиНаПрием.Контрагент КАК Контрагент,
	|	ЗаписиНаПрием.Контрагент.Телефон КАК Телефон,
	|	ЗаписиНаПрием.Мастер КАК Мастер,
	|	ВЫРАЗИТЬ(ЗаписиНаПрием.Контрагент.Наименование КАК СТРОКА) КАК КонтрагентНаименование
	|ИЗ
	|	РегистрСведений.ЗаписиНаПрием КАК ЗаписиНаПрием
	|ГДЕ
	|	ЗаписиНаПрием.ДатаВремяЗаписи >= &ТекДата
	|	И ЗаписиНаПрием.Активность = ИСТИНА
	|	И ЗаписиНаПрием.Регистратор.ИДКонтрагента = &ИДКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВремяЗаписи
	|ИТОГИ
	|	МАКСИМУМ(КонтрагентНаименование) КАК Контрагент,
	|	МАКСИМУМ(Телефон),
	|	МАКСИМУМ(Мастер)
	|ПО
	|	Заказ";
	
	Запрос.УстановитьПараметр("ИДКонтрагента", ИДКонтрагента);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗаказы = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Заказ");
	
	Пока ВыборкаЗаказы.Следующий() Цикл
		
		//ТекстСообщения = ТекстСообщения + "<b> №" + ВыборкаЗаказы.РегистраторНомер + " від " + Формат(ВыборкаЗаказы.РегистраторДата, "ДЛФ=Д") + ":</b>" + Символы.ПС;
		мСтрок.Добавить("<b>Запис №" + ВыборкаЗаказы.РегистраторНомер + " від " + Формат(ВыборкаЗаказы.РегистраторДата, "ДЛФ=Д") + ":</b>");
		мСтрок.Добавить("Клієнт: " + ВыборкаЗаказы.Контрагент + " (" + ВыборкаЗаказы.Телефон + ")");
		мСтрок.Добавить("Майстер: " + ВыборкаЗаказы.Мастер);
		
		ВсегоСумма = 0;
		
		ВыборкаВремяЗаписи = ВыборкаЗаказы.Выбрать();
		
		Пока ВыборкаВремяЗаписи.Следующий() Цикл
			//ТекстСообщения = ТекстСообщения + ВыборкаВремяЗаписи.ДатаВремяЗаписи + " " + ВыборкаВремяЗаписи.Номенклатура + " - " + ВыборкаВремяЗаписи.НомекнлатураЦена +Символы.ПС;
			мСтрок.Добавить(Формат(ВыборкаВремяЗаписи.ДатаВремяЗаписи, "ДЛФ=В") + " - " + ВыборкаВремяЗаписи.Номенклатура + " - " + ВыборкаВремяЗаписи.Цена);
			ВсегоСумма = ВсегоСумма + ВыборкаВремяЗаписи.Цена;
		КонецЦикла;
		
		мСтрок.Добавить("Всього до сплати: " + ВсегоСумма);
		ТекстСообщения = СтрСоединить(мСтрок, Символы.ПС);
		
		ОписаниеЗаказа.Вставить(ВыборкаЗаказы.Заказ, ТекстСообщения);
		
		ТекстСообщения = "";
		
	КонецЦикла;
	
	Возврат ОписаниеЗаказа;
	
КонецФункции

Функция ПовторныйЗапрос(ЗапросБоту)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеТелеграмм.text КАК text,
	|	ДанныеТелеграмм.МоментВремени
	|ИЗ
	|	РегистрСведений.ЗапросыБоту КАК ДанныеТелеграмм
	|ГДЕ
	|	ДанныеТелеграмм.id = &ИДКонтрагента
	|	И ДанныеТелеграмм.Обработан = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеТелеграмм.МоментВремени УБЫВ";
	
	Запрос.УстановитьПараметр("ИДКонтрагента", ЗапросБоту.Чат);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.text = ЗапросБоту.text Тогда
			РазницаВоВремени = ВыборкаДетальныеЗаписи.МоментВремени - ЗапросБоту.МоментВремени;
			РазницаВоВремени = ?(РазницаВоВремени >= 0, РазницаВоВремени, -РазницаВоВремени);
			Если РазницаВоВремени < 2 Тогда
				Результат = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗафиксироватьОшибку(Знач ЗапросБоту, ТекстСообщения)
	
	ЗаписьЖурналаРегистрации("Телеграм",УровеньЖурналаРегистрации.Ошибка,,,ТекстСообщения + Символы.ПС +ОписаниеОшибки());
	РегистрыСведений.ЗапросыБоту.ЗакрытьСообщение(Телеграм.Бот, ЗапросБоту.update_id);
	СообщитьОбОшибке(ЗапросБоту, ТекстСообщения);
	
КонецПроцедуры

Процедура СообщитьОбОшибке(ЗапросБоту, ТекстСообщения)
	Результат = Телеграм.sendMessage(ЗапросБоту.Чат, ТекстСообщения);
	ОбработатьРезультат(ЗапросБоту, ТекстСообщения, Результат);
КонецПроцедуры

Функция НайтиПоТелефону(Телефон, ВидСправочника) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Существует", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидСправочника.Ссылка КАК Ссылка
	|ИЗ
	|	&ВидСправочника КАК ВидСправочника
	|ГДЕ
	|	ВидСправочника.Телефон = &Телефон";
	
	Запрос.УстановитьПараметр("ВидСправочника", "Справочник."+ВидСправочника);
	Запрос.УстановитьПараметр("Телефон", Телефон);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Результат.Вставить("Ссылка", Выборка.Ссылка);
		Результат.Вставить("Существует", Истина);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЗаписатьИДТелеграм(Мастер, ИДТелеграм)
	
	Результат = Ложь;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	Мастера.Ссылка КАК Мастер
	//|ИЗ
	//|	Справочник.Мастера КАК Мастера
	//|ГДЕ
	//|	Мастера.Ссылка = &Мастер";
	//
	//Запрос.УстановитьПараметр("Мастер", Мастер);
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	СпрМастера = ВыборкаДетальныеЗаписи.Мастер.ПолучитьОбъект();
	СпрМастера = Мастер.ПолучитьОбъект();
	СпрМастера.Идентификатор = ИДТелеграм;
	Попытка
		СпрМастера.Записать();
		Результат = Истина;
	Исключение
		Сообщить("Не удалось записать объект """ + СпрМастера + """!
		|" + ОписаниеОшибки(), 60);
	КонецПопытки;
	//КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьМастераПоБоту(Бот)
	
	ОписаниеМастера = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Мастера.Ссылка КАК Ссылка,
	|	Мастера.Идентификатор КАК Идентификатор
	|ИЗ
	|	Справочник.Мастера КАК Мастера
	|ГДЕ
	|	Мастера.Бот = &Бот
	|	И Мастера.ПометкаУдаления = ЛОЖЬ
	|	И Мастера.Работает = ИСТИНА";
	
	Запрос.УстановитьПараметр("Бот", Бот);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	ОписаниеМастера.Вставить("Мастер", 			Выборка.Ссылка);
	ОписаниеМастера.Вставить("Идентификатор", 	Выборка.Идентификатор);
	
	Возврат ОписаниеМастера;
	
КонецФункции

//Функция ЭтоМастер(ЗапросБоту)
//	
//	ЭтоМастер = Ложь;
//	Идентификатор = Неопределено;
//	ОписаниеМастера = ПолучитьМастераПоБоту(Телеграм.Бот);
//	ОписаниеМастера.Свойство("Идентификатор", Идентификатор);
//	
//	Если Идентификатор <> Неопределено И Идентификатор = ЗапросБоту.Чат Тогда
//		ЭтоМастер = Истина;
//	КонецЕсли;
//	
//	Возврат ЭтоМастер;
//	
//КонецФункции

Функция ЭтоЧисло(Парам)
	
	Результат = Ложь;
	
	Попытка
		Кво = Число(Парам);
		Результат = Истина
	Исключение
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Старое
Функция ПолучитьМастеров(Бот)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Мастера.Бот КАК Бот,
	|	Мастера.Ссылка КАК Мастер,
	|	Мастера.Специальность КАК МастерСпециальность
	|ИЗ
	|	Справочник.Мастера КАК Мастера
	|ГДЕ
	|	Мастера.Бот = &Бот
	|	И Мастера.ПометкаУдаления = ЛОЖЬ
	|	И Мастера.Работает = ИСТИНА";
	
	Запрос.УстановитьПараметр("Бот", Бот);
	
	ВыборкаМастеров = Запрос.Выполнить().Выбрать();
	
	Возврат ВыборкаМастеров;
	
КонецФункции



//Функция ПолучитьДанныеЗаказа(Заказ, Мастер)
//	
//	Результат = Новый Структура("ДлительностьУслуг", 0);
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ ПЕРВЫЕ 1
//	|	ЗаписьНаПриемВремяЗаписи.Мастер КАК Мастер,
//	|	ЗаписьНаПриемВремяЗаписи.Номенклатура КАК Номенклатура,
//	|	СУММА(ЗаписьНаПриемВремяЗаписи.Длительность) КАК Длительность,
//	|	СУММА(ЗаписьНаПриемВремяЗаписи.Цена) КАК Цена
//	|ИЗ
//	|	Документ.ЗаписьНаПрием.ВремяЗаписи КАК ЗаписьНаПриемВремяЗаписи
//	|ГДЕ
//	|	ЗаписьНаПриемВремяЗаписи.ТипЗаписиНаПрием = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейНаПрием.Телеграм)
//	|	И ЗаписьНаПриемВремяЗаписи.Мастер = &Мастер
//	|	И ЗаписьНаПриемВремяЗаписи.Ссылка = &Заказ
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	ЗаписьНаПриемВремяЗаписи.Мастер,
//	|	ЗаписьНаПриемВремяЗаписи.Номенклатура";
//	
//	Запрос.УстановитьПараметр("Мастер", Мастер);
//	Запрос.УстановитьПараметр("Заказ", Заказ);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	Если НЕ РезультатЗапроса.Пустой() Тогда 
//		
//		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//		ВыборкаДетальныеЗаписи.Следующий(); 
//		
//		Результат.ДлительностьУслуг = ВыборкаДетальныеЗаписи.НоменклатураДлительность;
//		Результат.Вставить("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
//		Результат.Вставить("НоменклатураЦена", ВыборкаДетальныеЗаписи.НоменклатураЦена);
//		
//	КонецЕсли;
//	
//	Возврат Результат;
//	
//КонецФункции

//// Находит Документ ЗаказТелеграм по Идентификатору Телеграм,
//// если заказ не найден - создает новый и заполняет шапку
////
//// Параметры: 
//// 	ИДКонтрагента(строка) - Идентификатор пользователя в Телеграм.
//// Возвращаемое значение: 
////	ДокументСсылка.ЗаказТелеграм - найденная документ, или Неопределено если произошла ошибка записи.
////
//Функция НайтиЗаказ(ИДКонтрагента, Результат, ВыбраннаяДата = Неопределено) 
//	
//	Заказ = Неопределено;
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ ПЕРВЫЕ 1
//	|	ЗаказТелеграм.Ссылка КАК Ссылка
//	|ИЗ
//	|	Документ.ЗаписьНаПрием КАК ЗаказТелеграм
//	|ГДЕ
//	|	ЗаказТелеграм.ИДКонтрагента = &ИДКонтрагента
//	|	И НЕ ЗаказТелеграм.Проведен
//	|	И НЕ ЗаказТелеграм.ПометкаУдаления
//	|	И ЗаказТелеграм.Ссылка.Дата МЕЖДУ &НачалоДня И &КонецДня";
//	//|	И &УсловиеПериод";
//	
//	Запрос.УстановитьПараметр("ИДКонтрагента", ИДКонтрагента);
//	
//	Если ВыбраннаяДата = Неопределено Тогда
//	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДатаСеанса()));
//	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДатаСеанса()));
//	//	Запрос.УстановитьПараметр("УсловиеПериод", "ЗаказТелеграм.Ссылка.Дата МЕЖДУ &НачалоДня И &КонецДня");
//	Иначе
//		Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ВыбраннаяДата));
//		Запрос.УстановитьПараметр("КонецДня", КонецДня(ВыбраннаяДата));
//	//	Запрос.УстановитьПараметр("УсловиеПериод", "ЗаказТелеграм.ВремяЗаписи.ДатаЗаписи МЕЖДУ &НачалоДня И &КонецДня");
//	КонецЕсли;
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	Выборка = РезультатЗапроса.Выбрать();
//	Если Выборка.Следующий() Тогда 
//		Заказ = Выборка.Ссылка;
//	КонецЕсли;
//	
//	Возврат Заказ;
//	
//КонецФункции //НайтиТелеграмЗаказ
#КонецОбласти