Перем Бот;
Перем ТокенБота;
Перем Телеграм Экспорт;

////////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

Функция ПолучитьДанныеСообщения(Идентификатор)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗапросыБоту.ДанныеЗапроса
	|ИЗ
	|	РегистрСведений.ЗапросыБоту КАК ЗапросыБоту
	|ГДЕ
	|	ЗапросыБоту.update_id = &updateid
	|	И ЗапросыБоту.Бот = ЗНАЧЕНИЕ(Справочник.Боты.КлёвыйBot)";
	Запрос.УстановитьПараметр("updateid", Идентификатор);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат "";
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ДанныеЗапроса.Получить();

КонецФункции // ПолучитьДанныеСообщения()

Процедура ЗакрытьСообщение(Идентификатор)

	Запись = РегистрыСведений.ЗапросыБоту.СоздатьМенеджерЗаписи();
	Запись.Бот = Бот;
	Запись.update_id = Идентификатор;
	Запись.Прочитать();
	Запись.Обработан = Истина;
	Запись.Записать();

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С СЕССИЯМИ
//

Функция СоздатьСессию(ЗначениеСессии)

	ЗаписьСессии = РегистрыСведений.СессииБотов.СоздатьМенеджерЗаписи();
	ЗаписьСессии.Бот = Бот;
	Идентификатор = Новый УникальныйИдентификатор();
	ЗаписьСессии.Сессия = Идентификатор;
	ЗаписьСессии.ДанныеСессии = ЗначениеВСтрокуВнутр(ЗначениеСессии);
	ЗаписьСессии.ДатаСоздания = ТекущаяДата();
	ЗаписьСессии.Записать();
	Возврат Идентификатор;

КонецФункции // 

Функция ПолучитьОписаниеСессии(ИдентификаторСессии)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СессииБотов.ДанныеСессии
	|ИЗ
	|	РегистрСведений.СессииБотов КАК СессииБотов
	|ГДЕ
	|	СессииБотов.Бот = ЗНАЧЕНИЕ(Справочник.Боты.КлёвыйBot)
	|	И СессииБотов.Сессия = &Сессия";
	Запрос.УстановитьПараметр("Сессия", Новый УникальныйИдентификатор(ИдентификаторСессии));
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;

	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат ЗначениеИзСтрокиВнутр(Выборка.ДанныеСессии);

КонецФункции // 

Процедура СоздатьСессиюКонтрагента(Контрагент, Сессия)

	Запись = РегистрыСведений.СессииКонтрагентов.СоздатьМенеджерЗаписи();
	Запись.Бот = Справочники.Боты.КлёвыйBot;
	Запись.Контрагента = Контрагент;
	Запись.ДанныеСессии = ЗначениеВСтрокуВнутр(Сессия);
	Запись.Записать();

КонецПроцедуры

Функция ПолучитьОписаниеСессииКонтрагента(Контрагент)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СессииКонтрагентов.ДанныеСессии
	|ИЗ
	|	РегистрСведений.СессииКонтрагентов КАК СессииКонтрагентов
	|ГДЕ
	|	СессииКонтрагентов.Бот = ЗНАЧЕНИЕ(Справочник.Боты.КлёвыйBot)
	|	И СессииКонтрагентов.Контрагент = &Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	СессииКонтрагентов.ДатаСоздания УБЫВ";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Новый Структура();
	КонецЕсли;

	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат ЗначениеИзСтрокиВнутр(Выборка.ДанныеСессии);

КонецФункции // 

Процедура УдалитьСессиюКонтрагента(Контрагент)

	ЗаписьСессии = РегистрыСведений.СессииКонтрагентов.СоздатьМенеджерЗаписи();
	ЗаписьСессии.Бот = Справочники.Боты.КлёвыйBot;
	ЗаписьСессии.Идентификатор = Контрагент;
	ЗаписьСессии.Удалить();

КонецПроцедуры // 


////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД БОТА
//

Функция ДоступныеКоманды(Команда)

	Если Лев(Команда, 1) = "/" Тогда
		Команда = Сред(НРег(Команда), 2);
		ПозицияИмениБота = СтрНайти(Команда, "@");
		Если ПозицияИмениБота > 0 Тогда
			Если НРег(Бот.Код) <> Сред(Команда, ПозицияИмениБота) Тогда	// Не тому боту команду шлют
				Возврат Справочники.КомандыБота.ПустаяСсылка();
			КонецЕсли;
			Команда = Лев(Команда, ПозицияИмениБота - 1);
		КонецЕсли;
	Иначе
		Возврат Справочники.КомандыБота.ПустаяСсылка();
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КомандыБота.Ссылка КАК КомандаБота
	|ИЗ
	|	Справочник.КомандыБота КАК КомандыБота
	|ГДЕ
	|	НЕ КомандыБота.ЭтоГруппа
	|	И НЕ КомандыБота.ПометкаУдаления
	|	И КомандыБота.Бот = &Бот
	|	И КомандыБота.Наименование = &Команда";
	Запрос.УстановитьПараметр("Команда", Команда);
	Запрос.УстановитьПараметр("Бот", Бот);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.КомандыБота.ПустаяСсылка();
	КонецЕсли;

	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.КомандаБота;

КонецФункции // ДоступныеКоманды()

Процедура НачатьОбщение(Сообщение)

	ПараметрыЗапроса = Новый Структура("reply_markup", "{""keyboard"":[[{""text"":""Кнопка1""}],[{""text"":""Кнопка2""}]],""resize_keyboard"":true}");
	ОтправитьСообщение(Сообщение.Чат, "Для продолжения выберите одну из команд ниже.",, ПараметрыЗапроса);

КонецПроцедуры // 

Процедура ПолучитьСправку(Сообщение)

	ТекстСправки = ПолучитьМакет("Справка").ПолучитьТекст();
	ОтправитьСообщение(Сообщение.Чат, ТекстСправки);

КонецПроцедуры

Процедура ОставитьОтзыв(Сообщение)

	ОтправленноеСообщение = ОтправитьСообщение(Сообщение.Чат, "Оставьте отзыв о боте следующим сообщением и он будет направлен разработчику.");
	// Это я не описывал. Зачастую для понимания, как реагировать на сообщение, нужно знать, 
	// в каком состоянии находится наше общение с пользователем. Вот для этого я и записываю в РС, что пользователь собирается писать отзыв.
	// И когда придёт след.сообщение от него, бот узнает, что это отзыв и надо его переслать овнеру бота.
	// Пойду, всё же допишу в статью и этот нюанс. :)
	//ЗаписьСессии = РегистрыСведений.СессииКонтрагентов.СоздатьМенеджерЗаписи();
	//ЗаписьСессии.Бот = Справочники.Боты.КлёвыйBot;
	//ЗаписьСессии.Контрагент = Сообщение.Контрагент;
	//ЗаписьСессии.ДатаСоздания = ТекущаяДата();
	//ЗаписьСессии.ДанныеСессии = ЗначениеВСтрокуВнутр(Новый Структура("Действие, Сообщение", "Отзыв", ОтправленноеСообщение.message_id));
	//ЗаписьСессии.Записать();

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ УПРАВЛЕНИЯ СООБЩЕНИЯМИ TELEGRAM
//

// Процедура отправляет сообщение в чат
// Чат - ChatID
// ТекстСообщения - текст сообщения
// ОтветНаСообщение - ID оригинального сообщения, в ответ на которое будет опубликовано данное
// Параметры - Соответствие - Ключ - имя параметра, Значение - его значение.
//
Функция ОтправитьСообщение(Чат, ТекстСообщения, ОтветНаСообщение = Неопределено, Параметры = Неопределено)

	ТекстЗапроса = СтрШаблон("bot%1/sendMessage?chat_id=%2&text=%3", ТокенБота, Формат(Чат, "ЧГ="), ТекстСообщения);

	Если ЗначениеЗаполнено(ОтветНаСообщение) Тогда
		ТекстЗапроса = ТекстЗапроса + "&reply_to_message_id=" + Формат(ОтветНаСообщение, "ЧГ=");
	КонецЕсли;

	Если ЗначениеЗаполнено(Параметры) Тогда
		Для каждого Параметр Из Параметры Цикл
			ТекстЗапроса = ТекстЗапроса + "&" + Параметр.Ключ + "=" + Параметр.Значение;
		КонецЦикла;
	КонецЕсли;

	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	HTTPОтвет = Соединение.Получить(Запрос);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
	Результат = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();

	Если Результат.ok Тогда
		Возврат Результат.result;	// Возвращаем ссылку на отправленное сообщение
	Иначе
		ТекстОписания = СтрШаблон("%1
|Чат: %2
|Текст: %3", Результат.description, Чат, ТекстСообщения);
		ЗаписьЖурналаРегистрации("КлёвыйBot", УровеньЖурналаРегистрации.Ошибка,,, ТекстОписания);
	КонецЕсли;

	Возврат Неопределено;

КонецФункции // 

// Процедура изменяет текст сообщения
// Чат - ChatID
// Сообщение - ID сообщения
// ТекстСообщения - текст сообщения
//
Процедура ИзменитьТекстСообщения(Чат, Сообщение, ТекстСообщения, Параметры = Неопределено)

	ТекстЗапроса = СтрШаблон("bot%1/editMessageText?chat_id=%2&message_id=%3&text=%4", ТокенБота, Формат(Чат, "ЧГ="), Формат(Сообщение, "ЧГ="), ТекстСообщения);

	Если ЗначениеЗаполнено(Параметры) Тогда
		Для каждого Параметр Из Параметры Цикл
			ТекстЗапроса = ТекстЗапроса + "&" + Параметр.Ключ + "=" + Параметр.Значение;
		КонецЦикла;
	КонецЕсли;

	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	HTTPОтвет = Соединение.Получить(Запрос);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
	Результат = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();

	Если НЕ Результат.ok Тогда
		ТекстОписания = СтрШаблон("%1
|Чат: %2
|Сообщение: %3
|Текст: %4", Результат.description, Чат, Сообщение, ТекстСообщения);
		ЗаписьЖурналаРегистрации("КлёвыйBot", УровеньЖурналаРегистрации.Ошибка,,, ТекстОписания);
	КонецЕсли;

КонецПроцедуры // 

// Процедура удаляет сообщение из чата
// Чат - ChatID
// Сообщение - ID сообщения
//
Процедура УдалитьСообщение(Чат, Сообщение)

	ТекстЗапроса = СтрШаблон("bot%1/deleteMessage?chat_id=%2&message_id=%3", ТокенБота, Формат(Чат, "ЧГ="), Формат(Сообщение, "ЧГ="));

	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	HTTPОтвет = Соединение.Получить(Запрос);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
	Результат = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();

	Если НЕ Результат.ok Тогда
		ТекстОписания = СтрШаблон("%1
|Чат: %2
|Сообщение: %3", Результат.description, Чат, Сообщение);
		ЗаписьЖурналаРегистрации("КлёвыйBot", УровеньЖурналаРегистрации.Ошибка,,, ТекстОписания);
	КонецЕсли;

КонецПроцедуры // 

Процедура ИзменитьКлавиатуруСообщения(Чат, Сообщение, Клавиатура = "")

	ТекстЗапроса = СтрШаблон("bot%1/editMessageReplyMarkup?chat_id=%2&message_id=%3", ТокенБота, Формат(Чат, "ЧГ="), Формат(Сообщение, "ЧГ="));
	Если НЕ ПустаяСтрока(Клавиатура) Тогда
		ТекстЗапроса = ТекстЗапроса + "&reply_markup=" + Клавиатура;
	КонецЕсли;

	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	HTTPОтвет = Соединение.Получить(Запрос);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
	Результат = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();

	Если НЕ Результат.ok Тогда
		ТекстОписания = СтрШаблон("%1
|Чат: %2
|Сообщение: %3", Результат.description, Чат, Сообщение);
		ЗаписьЖурналаРегистрации("КлёвыйBot", УровеньЖурналаРегистрации.Ошибка,,, ТекстОписания);
	КонецЕсли;

КонецПроцедуры

// Эта процедура отправляет не только файлы, но и многое другое.
// Например: документы, фотки, аудио, видео
// Пример использования:
// 	ОтправитьМатериал(Чат, Материал, "sendDocument", "document");
//
Процедура ОтправитьМатериал(Чат, Материал, Метод, Параметр)

	Если Материал = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ПустаяСтрока(Материал.Описание) Тогда
		ДанныеФайла = ПрисоединенныеФайлы.ПолучитьДанныеФайла(Материал);

		ТекстЗапроса =
"--%1
|Content-Disposition: form-data; name=""chat_id""
|
|%2
|--%1
|Content-Disposition: form-data; name=""%4""; filename=""%3""
|";
		Разделитель = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
		ТекстЗапроса = СтрШаблон(ТекстЗапроса, Разделитель, Чат, ДанныеФайла.ИмяФайла, Параметр);

		// Оцените, какой клёвый объект сделали в 8.3.
		// Особенно это заметно при сравнении с реализациями для платформы 8.2, которые можно найти в инете.
		Поток = Новый ПотокВПамяти();
		ЗаписьДанных = Новый ЗаписьДанных(Поток);
		ЗаписьДанных.ЗаписатьСтроку(ТекстЗапроса);
		ЗаписьДанных.Записать(ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Материал));
		ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("--%1--", Разделитель));
		ЗаписьДанных.Закрыть();

		ДвоичныеДанныеЗапроса = Поток.ЗакрытьИПолучитьДвоичныеДанные();
		
		// передадим данные на сервер
		Заголовки = Новый Соответствие();
		Заголовки.Вставить("Content-Type", "multipart/form-data, boundary=" + Разделитель);

		ТекстРесурса = СтрШаблон("bot%1/%2", ТокенБота, Метод);
		Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
		Запрос = Новый HTTPЗапрос(ТекстРесурса, Заголовки);
		Запрос.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанныеЗапроса);
		HTTPОтвет = Соединение.ОтправитьДляОбработки(Запрос);

		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
		Результат = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();

		Если Результат.ok Тогда
			МатериалОбъект = Материал.ПолучитьОбъект();
			МатериалОбъект.Описание = Результат.result.document.file_id;
			МатериалОбъект.Записать();
		Иначе
			Сообщить(Формат(Результат.error_code, "ЧГ=") + " " + Результат.description);
		КонецЕсли;
	Иначе
		//ТекстЗапроса = "bot" + Объект.ТокенБота + "/sendPhoto?chat_id=" + Формат(Чат, "ЧГ=") + "&photo=" + ИдентификаторИзображения;
		ТекстЗапроса = СтрШаблон("bot%1/%2?chat_id=%3&%4=%5", ТокенБота, Метод, Чат, Параметр, Материал.Описание);

		Запрос = Новый HTTPЗапрос(ТекстЗапроса);
		Соединение = Новый HTTPСоединение("api.telegram.org", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
		HTTPОтвет = Соединение.Получить(Запрос);
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
		Результат = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();

		Если НЕ Результат.ok Тогда
			Сообщить(Формат(Результат.error_code, "ЧГ=") + " " + Результат.description);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


Процедура ПрочитатьИОбработатьСообщение(Сообщение)

	Если Сообщение.ТипОтвета = Перечисления.ТипыОтветовТелеграм.Кнопка Тогда	// Это пришёл запрос доступа

		ДанныеСообщения = ПолучитьДанныеСообщения(Сообщение.update_id);
		// ...

		// Найдём админов бота
		Запрос = Новый Запрос;
		Запрос.Текст =
		"//здесь был текст запроса";
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Возврат;
		КонецЕсли;

		// Каждому админу отправим запрос на рассмотрение
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИдентификаторАкцепта = СоздатьСессию(Новый Структура("Действие, Контрагент", "Акцепт", Сообщение.Контрагент));
			ИдентификаторЗапрета = СоздатьСессию(Новый Структура("Действие, Контрагент", "Запрет", Сообщение.Контрагент));

			ПараметрыЗапроса = Новый Структура("reply_markup, parse_mode", СтрШаблон("{""inline_keyboard"":[[{""text"":""Разрешить"",""callback_data"":""%1""},{""text"":""Отклонить"",""callback_data"":""%2""}]]}", ИдентификаторАкцепта, ИдентификаторЗапрета), "Markdown");
			ОтправитьСообщение(Выборка.Контрагент.Идентификатор, СтрШаблон("Поступил запрос на предоставление доступа от [%1](http://t.me/%2).", Сообщение.Контрагент.ТелеграмИмя, Сообщение.Контрагент.ТелеграмНик), , ПараметрыЗапроса);
		КонецЦикла;

		ИзменитьКлавиатуруСообщения(Сообщение.Чат, ДанныеСообщения.callback_query.message.message_id);	// Удалим кнопку запроса.

	ИначеЕсли Сообщение.ТипОтвета = Перечисления.ТипыОтветовТелеграм.Текст Тогда	// Нажал кнопку внизу или ввёл текст

		ДанныеСообщения = ПолучитьДанныеСообщения(Сообщение.update_id);
		Попытка
			Кнопка = НРег(ДанныеСообщения.message.text);
		Исключение
			Кнопка = "";
		КонецПопытки;

		Если Кнопка = "НазваниеКнопки1" Тогда

			ПараметрыЗапроса = Новый Структура("reply_markup", "{""inline_keyboard"":[[{""text"":""Завершить"",""callback_data"":""Завершить""},{""text"":""Отменить"",""callback_data"":""Отменить""}]]}");
			ОтправитьСообщение(Сообщение.Чат, "Укажите все бла-бла. По завершению нажмите нужную кнопку в этом сообщении.",, ПараметрыЗапроса);

		ИначеЕсли Кнопка = "НазваниеКнопки2" Тогда

			ПараметрыЗапроса = Новый Структура("reply_markup", "{""keyboard"":[[{""text"":""ПерманентнаяКнопка1""}],[{""text"":""ПерманентнаяКнопка2""}]],""resize_keyboard"":true}");
			ОтправитьСообщение(Сообщение.Чат, "Вы исключены из списка.",, ПараметрыЗапроса);

		Иначе

			// Проверим, не команда ли это
			Команда = ДоступныеКоманды(Кнопка);
			Если НЕ Команда.Пустая() Тогда
				Выполнить(Команда.Обработчик + "(Сообщение)");
			КонецЕсли;
			
		КонецЕсли;

		// А это кусок другого бота, поэтому он тут смотрится нелепо, но нужен для примера отправки файлов
		Если Ложь Тогда

			// Родитель - любой объект базы, подключенный к подсистеме "ПрисоединенныеФайлы"
			Родитель = Справочники.Контрагенты.ПустаяСсылка();

			ЧатСтрокой = Формат(Выборка.chat_id, "ЧГ=");
			МассивПрисоединенныхФайлов = Новый Массив;
			ПрисоединенныеФайлы.ПолучитьПрикрепленныеФайлыКОбъекту(Родитель, МассивПрисоединенныхФайлов);
			Если МассивПрисоединенныхФайлов.Количество() Тогда
				Материал = МассивПрисоединенныхФайлов[0];
			ИначеЕсли Родитель.ВидМатериала = ПредопределенноеЗначение("Перечисление.ВидыМатериалов.Текст") Тогда
				ОтправитьСообщение(ЧатСтрокой, Родитель.Текст);
			Иначе

				Если Родитель.ВидМатериала = ПредопределенноеЗначение("Перечисление.ВидыМатериалов.Документ") Тогда

					ОтправитьМатериал(ЧатСтрокой, Материал, "sendDocument", "document");

				ИначеЕсли Родитель.ВидМатериала = ПредопределенноеЗначение("Перечисление.ВидыМатериалов.Картинка") Тогда

					ОтправитьМатериал(ЧатСтрокой, Материал, "sendPhoto", "photo");

				ИначеЕсли Родитель.ВидМатериала = ПредопределенноеЗначение("Перечисление.ВидыМатериалов.Аудио") Тогда

					ОтправитьМатериал(ЧатСтрокой, Материал, "sendAudio", "audio");

				ИначеЕсли Родитель.ВидМатериала = ПредопределенноеЗначение("Перечисление.ВидыМатериалов.Видео") Тогда

					ОтправитьМатериал(ЧатСтрокой, Материал, "sendVideo", "video");

				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

	ИначеЕсли Сообщение.ТипОтвета = Перечисления.ТипыОтветовТелеграм.Локация Тогда

		СессияКонтрагента = ПолучитьОписаниеСессииКонтрагента(Сообщение.Контрагент);
		Если СессияКонтрагента.Свойство("Действие") Тогда
			Если СессияКонтрагента.Действие = "ОжиданиеЛоки" Тогда
				// тут был код
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	ЗакрытьСообщение(Сообщение.update_id);

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////
// ГЛОБАЛЬНЫЕ КОМАНДЫ
//

// Обработка загруженных сообщений
Процедура ОбработатьЗапросыНаСервере() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗапросыБоту.update_id,
	|	ЗапросыБоту.Контрагент,
	|	ЗапросыБоту.chat_id КАК Чат,
	|	ЗапросыБоту.ТипОтвета
	|ИЗ
	|	РегистрСведений.ЗапросыБоту КАК ЗапросыБоту
	|ГДЕ
	|	ЗапросыБоту.Бот = ЗНАЧЕНИЕ(Справочник.Боты.КлёвыйBot)
	|	И НЕ ЗапросыБоту.Обработан
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗапросыБоту.МоментВремени";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;

	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПрочитатьИОбработатьСообщение(Выборка);
	КонецЦикла;

КонецПроцедуры	// ОбработатьЗапросыНаСервере


Бот = Справочники.Боты.КлёвыйBot;
ТокенБота = Бот.Токен;
